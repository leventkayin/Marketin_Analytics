<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.18.0108.1735                               -->
<workbook original-version='10.4' source-build='10.4.3 (10400.18.0108.1735)' source-platform='mac' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transaction_table.csv+ (Multiple Connections)' inline='true' name='federated.09ndoxy0primms11jfvus1khvso2' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='transaction_table' name='textscan.10l9ln202zl0q219botyk10ycnkv'>
            <connection class='textscan' directory='/Users/leventkayin/MSBA/Pernalonga' filename='transaction_table.csv' password='' server='' />
          </named-connection>
          <named-connection caption='product_table' name='textscan.0wfjfmq0ocd4ky127o8ji1m3umki'>
            <connection class='textscan' directory='/Users/leventkayin/MSBA/Pernalonga' filename='product_table.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transaction_table.csv].[prod_id]' />
              <expression op='[product_table.csv].[prod_id]' />
            </expression>
          </clause>
          <relation connection='textscan.10l9ln202zl0q219botyk10ycnkv' name='transaction_table.csv' table='[transaction_table#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='cust_id' ordinal='0' />
              <column datatype='real' name='tran_id' ordinal='1' />
              <column datatype='date' name='tran_dt' ordinal='2' />
              <column datatype='integer' name='store_id' ordinal='3' />
              <column datatype='integer' name='prod_id' ordinal='4' />
              <column datatype='string' name='prod_unit' ordinal='5' />
              <column datatype='real' name='tran_prod_sale_amt' ordinal='6' />
              <column datatype='integer' name='tran_prod_sale_qty' ordinal='7' />
              <column datatype='real' name='tran_prod_discount_amt' ordinal='8' />
              <column datatype='integer' name='tran_prod_offer_cts' ordinal='9' />
              <column datatype='real' name='tran_prod_paid_amt' ordinal='10' />
              <column datatype='real' name='prod_unit_price' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.0wfjfmq0ocd4ky127o8ji1m3umki' name='product_table.csv' table='[product_table#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='prod_id' ordinal='0' />
              <column datatype='integer' name='subcategory_id' ordinal='1' />
              <column datatype='string' name='sub_category_desc' ordinal='2' />
              <column datatype='integer' name='category_id' ordinal='3' />
              <column datatype='string' name='category_desc' ordinal='4' />
              <column datatype='string' name='brand_desc' ordinal='5' />
              <column datatype='string' name='category_desc_eng' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[brand_desc]' value='[product_table.csv].[brand_desc]' />
          <map key='[category_desc]' value='[product_table.csv].[category_desc]' />
          <map key='[category_desc_eng]' value='[product_table.csv].[category_desc_eng]' />
          <map key='[category_id]' value='[product_table.csv].[category_id]' />
          <map key='[cust_id]' value='[transaction_table.csv].[cust_id]' />
          <map key='[prod_id (product_table.csv)]' value='[product_table.csv].[prod_id]' />
          <map key='[prod_id]' value='[transaction_table.csv].[prod_id]' />
          <map key='[prod_unit]' value='[transaction_table.csv].[prod_unit]' />
          <map key='[prod_unit_price]' value='[transaction_table.csv].[prod_unit_price]' />
          <map key='[store_id]' value='[transaction_table.csv].[store_id]' />
          <map key='[sub_category_desc]' value='[product_table.csv].[sub_category_desc]' />
          <map key='[subcategory_id]' value='[product_table.csv].[subcategory_id]' />
          <map key='[tran_dt]' value='[transaction_table.csv].[tran_dt]' />
          <map key='[tran_id]' value='[transaction_table.csv].[tran_id]' />
          <map key='[tran_prod_discount_amt]' value='[transaction_table.csv].[tran_prod_discount_amt]' />
          <map key='[tran_prod_offer_cts]' value='[transaction_table.csv].[tran_prod_offer_cts]' />
          <map key='[tran_prod_paid_amt]' value='[transaction_table.csv].[tran_prod_paid_amt]' />
          <map key='[tran_prod_sale_amt]' value='[transaction_table.csv].[tran_prod_sale_amt]' />
          <map key='[tran_prod_sale_qty]' value='[transaction_table.csv].[tran_prod_sale_qty]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>cust_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cust_id]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>cust_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tran_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tran_id]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>tran_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tran_dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[tran_dt]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>tran_dt</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store_id]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prod_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prod_id]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>prod_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prod_unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prod_unit]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>prod_unit</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tran_prod_sale_amt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tran_prod_sale_amt]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>tran_prod_sale_amt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tran_prod_sale_qty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tran_prod_sale_qty]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>tran_prod_sale_qty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tran_prod_discount_amt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tran_prod_discount_amt]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>tran_prod_discount_amt</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tran_prod_offer_cts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tran_prod_offer_cts]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>tran_prod_offer_cts</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tran_prod_paid_amt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tran_prod_paid_amt]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>tran_prod_paid_amt</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prod_unit_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prod_unit_price]</local-name>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias>prod_unit_price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[transaction_table.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prod_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prod_id (product_table.csv)]</local-name>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias>prod_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[subcategory_id]</local-name>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias>subcategory_id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_category_desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sub_category_desc]</local-name>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias>sub_category_desc</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category_desc]</local-name>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias>category_desc</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand_desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand_desc]</local-name>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias>brand_desc</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_desc_eng</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category_desc_eng]</local-name>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias>category_desc_eng</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[product_table.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Wen&apos;s Calc' datatype='real' name='[Calculation_573364577749282819]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(-[tran_prod_discount_amt])+([tran_prod_paid_amt])' />
      </column>
      <column caption='Percent Discount' datatype='real' name='[Calculation_573364577749786628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(-[tran_prod_discount_amt])/([tran_prod_sale_amt])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Brand Desc' datatype='string' name='[brand_desc]' role='dimension' type='nominal' />
      <column caption='Category Desc' datatype='string' name='[category_desc]' role='dimension' type='nominal' />
      <column caption='Category Desc Eng' datatype='string' name='[category_desc_eng]' role='dimension' type='nominal' />
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Cust Id' datatype='integer' name='[cust_id]' role='dimension' type='ordinal' />
      <column caption='Prod Id (Product Table.Csv)' datatype='integer' name='[prod_id (product_table.csv)]' role='dimension' type='ordinal' />
      <column caption='Prod Id' datatype='integer' name='[prod_id]' role='dimension' type='ordinal' />
      <column caption='Prod Unit' datatype='string' name='[prod_unit]' role='dimension' type='nominal' />
      <column caption='Prod Unit Price' datatype='real' name='[prod_unit_price]' role='measure' type='quantitative' />
      <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
      <column caption='Sub Category Desc' datatype='string' name='[sub_category_desc]' role='dimension' type='nominal' />
      <column caption='Subcategory Id' datatype='integer' name='[subcategory_id]' role='dimension' type='ordinal' />
      <column caption='Tran Dt' datatype='date' name='[tran_dt]' role='dimension' type='ordinal' />
      <column caption='Tran Id' datatype='real' name='[tran_id]' role='dimension' type='ordinal' />
      <column caption='Tran Prod Discount Amt' datatype='real' name='[tran_prod_discount_amt]' role='measure' type='quantitative' />
      <column caption='Tran Prod Offer Cts' datatype='integer' name='[tran_prod_offer_cts]' role='measure' type='quantitative' />
      <column caption='Tran Prod Paid Amt' datatype='real' name='[tran_prod_paid_amt]' role='measure' type='quantitative' />
      <column caption='Tran Prod Sale Amt' datatype='real' name='[tran_prod_sale_amt]' role='measure' type='quantitative' />
      <column caption='Tran Prod Sale Qty' datatype='integer' name='[tran_prod_sale_qty]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_573364577749786628]' derivation='Avg' name='[avg:Calculation_573364577749786628:qk]' pivot='key' type='quantitative' />
      <column-instance column='[prod_unit_price]' derivation='Avg' name='[avg:prod_unit_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tran_prod_paid_amt]' derivation='Avg' name='[avg:tran_prod_paid_amt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tran_prod_sale_amt]' derivation='Avg' name='[avg:tran_prod_sale_amt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[brand_desc]' derivation='None' name='[none:brand_desc:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_573364577749786628]' derivation='Sum' name='[sum:Calculation_573364577749786628:qk]' pivot='key' type='quantitative' />
      <column-instance column='[prod_unit_price]' derivation='Sum' name='[sum:prod_unit_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tran_prod_discount_amt]' derivation='Sum' name='[sum:tran_prod_discount_amt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tran_prod_paid_amt]' derivation='Sum' name='[sum:tran_prod_paid_amt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tran_prod_sale_amt]' derivation='Sum' name='[sum:tran_prod_sale_amt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tran_prod_sale_qty]' derivation='Sum' name='[sum:tran_prod_sale_qty:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.594956' measure-ordering='alphabetic' measure-percentage='0.405044' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:brand_desc:nk]' palette='winter_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ACTIVIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ALBERGARIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ANILAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ASPIRINA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BARRAL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BIC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BOMBAY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BRONCHODUAL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CALVÉ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CARR&apos;S&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CASTIÇO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHAMPOMY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CLEAN&amp;CLEAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CONTROL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CUETARA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DEKORA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DOLCE GUSTO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUQUE VISEU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EQUIAPARA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FAIRY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FIORE DI CREMONA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FREIXENET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FRUUT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GILLETTE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GUD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HEINZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HORTA DO CASEIRINHO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JACQUOT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KARPEX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LA BURGALESA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LARANJADA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LOCTITE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR FRESCO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MELBOM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MIXA BEBE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MONTE DO CANSADO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MURGANHEIRA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NEUTECH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OBELISCO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OVOMALTINE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PARMAREGGIO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PERFETTO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PLAZA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;QUINTA DE PANCAS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;REACH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RITTER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SALOIO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SCHOGETTEN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SHEBA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOLO ITÁLIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SUGAL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TAPADA DO BARÃO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TÉTÉ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TRIUNFO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VALFONTE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VIDIGUEIRA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VITRINOR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZOVIRAX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 CASTELOS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AGROS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALVA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ARGU&apos;S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BACARDI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BELLOLIVA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOCA  DOCE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BRASMAR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CABEÇA DE TOIRO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CAPRICE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CASAL GARCIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CEM PORCENTO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHOLAGUTT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COMPRESSAS FARLAB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CÔVO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DAN UP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DEU LA DEU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DREAM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ELOQUENTE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ESTRELITAS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FERRARINI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FONTE DAV SERRANA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FROLLINI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GANCIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRAN PAVESI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HAPPYONE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HERDADE DOS MUACHOS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;INTERDOCES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JOI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KOKA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAGO MAGGIORE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LINDOR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MACIEIRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MATINADOS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MILKA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MONSARAZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MOURA BASTO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NEOBLANC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NUROFEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ORAL B&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PANTAGRUEL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PEDRAS NEGRAS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PINTAROLAS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;POUCA ROUPA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;QUEIJARIA PORTUGUESA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RAÍNHA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;REYMAR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S.GARDUNHA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SÃO DOMINGOS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SERRALEITE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SNAPPY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;STOP PIOLHOS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWIFFER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TERRAS D&apos;EL REI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TRADIÇÃO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UNCLE BENS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VERNEL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VINHA GRANDE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;X-TRA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A+&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALAMBRE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AMARGUINHA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ARROBEIROS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BALLANTINES&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BEN U RON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BOLERO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BREKKIES&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CACHOPAS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CARMONTI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CASTELO DE ARRAIOLOS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CERRADO DO VALE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CIF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CONDI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CREALYS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DANUBIO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DISFRUTA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DULCOLAX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ENCOSTAS DE ESTREMOZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EVEL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FILIPA DE LENCASTRE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FORAL D.HENRIQUE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FRUTIS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GAZELA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GRESSO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HARPIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HOCHWALD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J.FARIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KRUPS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LAMBERTZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LION&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MAGNORAL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MC CAIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MINHOFUMEIRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MONTARAZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MUNDUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NESQUIK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NUTRISSE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ORIOLA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PARACETAMOL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PENINSULAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PIZ BUIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PRESIDENT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;QUINTA DA BACALHOA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RAMIREZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RICORÉ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SABOROSA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SARBEC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SERRAS PENELA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SOCIETE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STUDIO LINE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TANG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TERRAS DEMO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TRIDENT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VALDISPERT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VICHY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VINHAS DE PEGÕES&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YOGGI&quot;</bucket>
            </map>
            <map to='#6b6b6b'>
              <bucket>&quot;DOVE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ADEGA DE BORBA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ALMENDRO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ANTARTICA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AUSONIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BAYGON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BIMBO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BONGO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BUFALO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CAMPONES&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CASA  DE MATEUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CATSAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHEERIOS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COLA CAO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CORAL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D&apos;OBIDOS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DELTA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DON SIMON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E BAC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ESP BEIJOS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FASTIO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FLAMA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FRICO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FUMEIROS DA GUARDA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GLISS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GUTLAND&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HERAS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ILHA PEIXE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JERONIMO VALENTE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KERATIN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LACASA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LE PETIT MARSEILLAIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LOURO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MARIALVA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MERENDEIRO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MOINHOS DO LAPÃO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MONTE VELHO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NICUL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OLARIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PAIVA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PASSPORT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PERUGINA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;POLIPHONIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PURINA DELIBAKIE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;QUINTA DO SALGUEIRÓ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RED BULL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ROLA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SANDEVID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SCOTTEX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SIDUL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SORRAIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUNNY DELIGHT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TATAY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TIDY CATS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TURBO ACTION&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VANISH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VILA REGIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WEETABIX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADAGIO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ALCAÇOVAS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ANIMUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ASSO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BARROSO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BICENTURY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BON THON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BRUFEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CAMPAINHA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CARTE D&apos;OR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CASTING&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHAPARRO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CONVENTO DA VILA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CUTTY SARK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DELI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOM KEIJO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DURAGLIT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ERISTOFF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FAMOUS GROUSE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FIRMO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FRESH&amp;CLEAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FULA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GINO CANESTEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GULLON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HELLER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HOT WHEELS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JAMESON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KELLOGG´S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LA PIARA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LARANO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LOGAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MARCO REAL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MEN EXPERT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MODERNA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MONTE DO ENFORCADO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MY DOG IS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NEUTRA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OFFLEY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OVOS DE OIRO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PARODONTAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PERIQUITA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PLENO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PROALIMENTAR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;QUINTA DO ALQUEVE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;REAL FORTE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ROCHEDO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SALUDÃES&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SCHOLL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SHOYCE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOMERSBY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SUGUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TAPADA DOS GAMAS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TETLEY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VALGRANDE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VIEIRA  DE CASTRO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VIVE SOY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACH BRITO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALANDRA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AMBIPUR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ARTENAY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BALLERINA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BEPANTHENE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOLLYCAO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRIBON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CADBURY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CARNALENTEJANA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CASTELO DE ESTREMOZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CESAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CIGALA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CONSTANTINO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CRISTAL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DAY BY DAY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DISNEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DUM DUM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ENCOSTAS DE PIAS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EXCELLENCE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FILIPINOS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FORMA+&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FRUTISSIMA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GELCAMPO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GRIPONAL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HAVANA CLUB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HOFFEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J&amp;B&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JUBILEU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KUKIDENT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAMEGO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MAIZENA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MCVITIES&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MISTOLIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MONTE DA RAVASQUEIRA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MUNDUSDOG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NESTEA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;O TAL VINHO DA LIXA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ORTIZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PARANIX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PENSAL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PLANALTO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PRESTIGE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;QUINTA DA LIXA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RANA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RIMMEL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAGRES&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SARGENOR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SERRATA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SOFLAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SUAVECEL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TANQUERAY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TERRAS DO PÓ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRIFENE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VALE DOS BARRIS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VICKS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VISCONDE DE GARCEZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ZAS&quot;</bucket>
            </map>
            <map to='#90728f'>
              <bucket>&quot;PRIVATE LABEL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AFTER EIGHT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ALTO DA VILA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ARBRE MAGIQUE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B COMPAL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BEIRÃO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BISOLVON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BRANCA DE NEVE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BYBA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CANTOLIVA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CASA TARRADELLAS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CEIFEIRA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHIVAS REGAL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COMFORT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COTE D&apos;OR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DAMATTA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DESTOP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DR BENTES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ELGYDIUM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ESTRELA DA BEIRA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FENO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FLUIMUCIL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FRITÓLEO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GALLO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GOURMET&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HAMLET&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HERDADE DAS SANTAS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INSULAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JOHNNIE WALKER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KNORR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LAGAR DAS MOIRAS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LIBENAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M&amp;M&apos;S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MARTINI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MILCHFRISCH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MONCHIQUE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MOULINEX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NAZARE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NOVA AÇORES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OMO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PANKREOFLAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PAULY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PIERROT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PORTAL DE SÃO BRAZ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;QUATRO ESTAÇÕES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RAFAELLO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;REVLON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RUFFLES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SANTOQUEIJO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SERRA DA ESTRELA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SMINT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;STA CATARINA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SURF&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TERRA NOSTRA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TORRE DE MENAGEM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ULTIMA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VEET&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VINHA DO MONTE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WOOLITE&quot;</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>&quot;LIONFRESH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3AMIGOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AIRWICK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALVELHE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ARIEL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BAHLSEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BELLS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOCADELIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BRAUN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CABRIZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CARDHU&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CASAL MENDES&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CENTRUM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHUPA CHUPS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CONDE DE ARRAIOLOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COZINHA PRONTA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DANACOL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DIADERMINE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DU BOIS DE LA ROCHE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ELVIVE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ESTREMOCENSE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FERRERO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FONTE DE SANTA QUITÉ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FROZEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GARCIA &amp; BAQUERO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GRANJA S. FRANCISCO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HARIBO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HERO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IOGOLINO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JOINCO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KOLIOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LAGOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LINDT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MAGGI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MATINAL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MILKANA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MONSTER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MOURO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEOFLAME&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NUTAL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ORBIT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PANTENE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PEDRAS SALGADAS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PIOLHOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;POWERADE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;QUINTA DA ALORNA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RAMA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RHINOMER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SABORES DA SOALHEIRA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SÃO JORGE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SERRAMEL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SNICKERS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STREPFEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SYOSS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TERRAS DE FELGUEIRAS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TREMOCEIRA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;URBE AUGUSTA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VERSÁTIL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VINHA MARIA ANA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;XAU&quot;</bucket>
            </map>
            <map to='#aa8780'>
              <bucket>&quot;CORINE FARME&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AEG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;APTAMIL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AXE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEIRA LAMEGO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BIOACTIVO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BORMIOLI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BURN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CANESTEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CASA DO PORCO PRETO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CE GRIPE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHIPICAO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COLOMBO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CORPOS DANONE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DAILIDOCE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DERMEXCELLENCE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DOVO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EL PASO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ESTAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FELIX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FLORA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FRISKIES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GALBANI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GORDONS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HALIBUT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HERDADE DA FIGUEIRIN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IMPERIAL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JOÃO PIRES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KIT KAT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LACTOVIT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LI LIN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LUTTI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MARQUÊS DE BORBA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MIGUEL&amp;MIGUEL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MOMENTS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MONTIQUEIJO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NATURAL HONEY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NO LABEL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OLIVAL DO ZAMBUJAL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PALHAIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PATEX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PHILIPS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PORTA DA RAVESSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;QTA JUGAIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RADION&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RENOVA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ROYAL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SANTIAGO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SEL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SKITTLES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SOVIBOR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUPER POP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TENÓRIO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TOPO DA TORRE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UHU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VAT 69&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VILLACENTENO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WILLIAM LAWSON&apos;S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACQUAMER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALANDROAL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AMBRE SOLAIRE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARTIACH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BAR ROYAL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BETADINE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BOM  PETISCO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRISA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CALÉM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CARNES ALTER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CASTELO DE PENALVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CEVADAS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CILLIT BANG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CONSTANTINOS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CROFT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DEBLEN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DUNSTONE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ENGENHO NOVO DA MADE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EXCILOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FIM DE SECULO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FOZ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FRUTOP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GELPEIXE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GUADALUPE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HEAD&amp;SHOULDERS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HOME SELECTION&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JACK DANIELS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JUVER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;L&apos;OR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LANCERS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LIPTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MALTESERS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MEANDRO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MITOSYL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MONTE DA ROQUINA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MURAL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NESTLE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;O.B.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OURO D&apos;ELVAS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PARCELAS DO ALQUEVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PEPSI COLA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PLANICIE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PRIMOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;QUINTA DA PACHECA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RAPOSEIRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RIO DOS PATOS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAGRES RADLER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAVORA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SEVEN UP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SOFT TISSUE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SUCHARD EXPRESS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TANTUM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TERRAS DO SUÃO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRINA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VALE RICO HOMEM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VICTOR FERNANDES&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VITALIS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ZÉFYRO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ADEGA DE MONÇÃO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALMOSTER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ANTIGRIPPINE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AVENA KINESIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BEBEGEL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BIO KILL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BONJOUR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BUITONI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CAMPOS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CASA DE SANTAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CAVALO NEGRO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHEESTRINGS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COLGATE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COREGA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DA TERRINHA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DELTA Q&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DONETTES&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EAGLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ESPINA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FAVAIOS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FLAMEFAST&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FRIEDEL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FUMEIROS LAMEGO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GLOBO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GUYLIAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HERBAL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ILÓGICO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JERONIMOS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KERRYGOLD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LACASITOS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LEGADO DE PIAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LUGAR SERRANO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MARIBERICA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MESTEMACHER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MOKAMBO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MONTE VOUGA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NARTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NIDO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OLD SPICE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PALA-PALA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PASTA DO DIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PESCANOVA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PONTE DA BARCA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PURINA ONE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QUINTA DOS ACIPRESTE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;REGINA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ROMEIRA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SANEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SEARA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SIMEÃO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SOSSEGO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SUNQUICK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TAVARES&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TOBLERONE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUTTI PASTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VAQUEIRO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VILA SANTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WERTHER&quot;</bucket>
            </map>
            <map to='#cecb76'>
              <bucket>&quot;JBABY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ADEGA DE PALMELA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALPEN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ANTISTAX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AVENE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BECEL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIO3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BONOMI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BUONDI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CANDEREL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CASA DO AIDO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CAVE 7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHEETOS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COLHOGAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DAFLON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DENIM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DONUTS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EIRA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ESPORÃO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FAVO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FLASH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FRIGI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FUMEIROS POSSIDÓNIO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GLORIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HAAGEN DAZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HERDADE AMENDOEIRA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ILVICO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JMF&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KH7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LACOR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LEVITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LUSO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MARILAN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MESTRE HENRIQUES&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MOLDING&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MONTERS HIGH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NASEX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NIVEA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OLEOBAN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PALADIN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PASTELARIA ROLO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PEZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PONTE DE LIMA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PUROLIVA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;QUITOSO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;REGUENGOS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ROSMANINHO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SANTAL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SEEBERGER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SKALA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SOTAVINHOS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SUNSILK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TELFAST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TOFINA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TWIX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VASCO DA GAMA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VILEDA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WHISKAS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AERO OM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ALTANO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AQUAFRESH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AYAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BEIRAIS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BISARO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOUNTY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BUSHMILLS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CANTO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CASA SANTOS LIMA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CECRISINA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHIPS AHOY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COMBATE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COSTATUM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DALFOUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DESPERADOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DR BAYARD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EL POZO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ESTEVA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FENISTIL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FLORBÚ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FRISUMO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GALITOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GORILA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HALLS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HERDADE DAS ALDEIAS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;INATURAL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JOCCA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KIWI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LACTULOSE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LIBBEY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MARS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MILBAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MON CHERI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MORE COD FISH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NATURNES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NOBRE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OLIVEIRA SERRA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PALMOLIVE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PATO REAL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PIC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PORTAL DAS HORTAS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;QUANTO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RADISSON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;REVITALIFT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RUBSON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SANTO ONOFRE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SENSODYNE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SMARTIES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SPRITE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUPREME&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TERRA DE FRADES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TORINESI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UL 250&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VATEL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VIMEIRO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WITORS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AGERUL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ALUMINIOS VIEIRA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ARGO MADEIRA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BABYBEL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BELLE COLOR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BLEDINA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BRASA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CABEÇA DE BURRO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CAPRI-SONNE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CASAL DA EIRA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CELAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHOCAPIC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COMPAL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COUTEIRO MOR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DAN CAKE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DETTOL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DR OETKER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ELNETT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ESTRELA DO ATLANTICO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FERBAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FONTANÁRIO DE PEGÕES&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FRIZE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GALP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRAFIC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HANSAPLAST&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HERDADE DOS GROUS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;INSYS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JOHNSON&amp;JOHNSON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KOALA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LAGARES DO CERRADO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LIMIANO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAÇARICO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MATEUS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MILHAFRE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MONFORQUEIJO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MOURA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NEO QUITOSO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NOVYCERA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PANRICO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PEDIGREE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PINGA AMOR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PORTO FERREIRA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;QUEIJARIA GUILHERME&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RAID&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;REXONA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S.DOMINGOS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SANYTOL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SERRADAYRES&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SMIRNOFF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;STEC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SVELTESSE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TERRAS D&apos;ALTER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TORRES DE VILA NOVA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ULTRA SUAVE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VERCOOPE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VINHA DO POÇO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WYKE FARMS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ADEGA ALMEIRIM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALIANÇA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ANITEX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASSOBIO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BAUDUCCO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BILORES&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BON-O-BON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BSE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAMPILHO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CARTUXA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CATAPEREIRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHARAMBA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLUSTERS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CONVENTUAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D. PANCHO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DELIPICK &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DOM MARTINHO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DUREX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ERMELINDA FREITAS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FANTA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FITNESS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FRESKY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FULLMARKS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GLACIAR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GULOSO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HELLMANNS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HUGGIES&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JANGAARD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KENDY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LABELLO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LATITUDE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LOIOS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MARE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MENTOS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MOET CHANDON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MONTE DOS PEGOS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NACIONAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NEUTROGENA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OIKOS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PACIÊNCIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PASCOAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PEROLA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PLEXUS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRONTO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;QUINTA DO CARMO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;REAL GREI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RODA DOS COELHOS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SALUTEM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SCHWEPPES&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SICAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SONASOL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUMOL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TAPADA DOS GANHÕES&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;THROMBOCID&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TULICREME&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VALLADO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VIGOR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VOLTAREN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACTIMEL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ALARDO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ANGULO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARTICO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BARBOT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BIAFINE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BOM SUCESSO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRISE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CALGON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CAROLANS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CASTELO DE PIAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CHAMINÉ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CLARIM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CONTESSA CARLOTTA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CROWN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DEFESA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DºJOÃO I&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DUORUM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ENO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EXPORTAÇÃO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FINISH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FRANZISKANER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FRUTORRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GENERAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUARANA BRASIL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HEINEKEN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HORNO DE ARAGÓN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JACOBS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KAFFA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;L&apos;OREAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAPADAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LISTERINE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MANDARIM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MEBOCAINA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MIXA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MONTE DAS ÂNFORAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MURALHAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NESTUM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OATLY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OVIQUEIJO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PARMALAT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PERECÍVEIS CARNE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PLANTA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRINGLES&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;QUINTA DA PANTOJA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RISOL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SALOINHA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAZONAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SHARP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SOLANO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SUCOL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TANTUM VERDE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TESTAMENTO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TRINCA BOLOTAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VALEGRANDE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VIDAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VITERRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ZOOLIT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1920&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AJAX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALVORADA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ARIETE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BAILEY´S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BELVITA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BOCHAM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BRAVO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CACAOLAT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAREFREE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CASTELLANA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CEREALITALIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CICONIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CONDE DE CORTES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COZINHA VELHA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DANONE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DIATOSTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DUCA DEGLI ABRUZZI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ENCONSTAS DE ALQUEVA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EUROFUMEIRO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FERRERO ROCHER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FONTE DO NICO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FRUCTIS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GARNIER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GRANTS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HARINA PAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HEXTRIL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ISIDORO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JOMAFE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KOMPENSAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LAGOSTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LINHAS TORTAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MAGIC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MATUTANO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MIMOSA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MONTANHA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MOVIDA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEOLAR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NUTELLA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OREO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PAPA FIGOS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PEGÕES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PIRASUNUNGA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PREDILECTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QUINTA DA AVELEDA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RAMAZZOTTI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RIBEIRA DO GUADIANA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SABORES DO CAMPO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SAO MIGUEL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SERRANIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SOCADO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STREPSILS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TABASCO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TERRAS DE NELAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TRES IGREJAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VACA QUE RI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VIA LATINA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VINHAS ALTAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;XEROX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ADEGÃO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALPRO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;APETITE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AVÓ FILÓ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BEEFEATER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BIO-OIL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BORGES&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BURMESTER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CANDYCAT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CASA DO CRESPO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAVES SANTA MARTA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHICLETS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COLMEIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CORONA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DAGRAGEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DENTALIFE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EL CASERIO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ESPRESSO ITALIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FELGUEIRAS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FLOR DE MAYO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FRIP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FUND EUGENIO ALMEIDA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GOLDEN GRAHAMS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HALAGO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HERDADE COTEIS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IMODIUM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JOÃO P.RAMOS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KINDER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LACTACYD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LEZIRIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LUTSINE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MARNOTO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MGF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MOLICO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MONTES CLAROS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NASORHINATIOL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NIZORAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OLIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PALETTE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PASTOR B.ALTA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHILADELPHIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PORMINHO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PURSENIDE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RAÇÕES ZEZERE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;REINA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROWENTA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SANTERO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SEGREDOS S.MIGUEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SKIP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SOURCING&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SUPER BOCK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TENA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TOM CAKE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UCAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VASENOL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VILLA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WILKINSON&quot;</bucket>
            </map>
            <map to='#ff9888'>
              <bucket>&quot;DODOT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ADEGA COOPERATIVA DO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ALMEIDA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ANTA DA SERRA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUREM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BAVARIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BIM BOM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BONDUELLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BUBBLICI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAMPOFRIO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CASA DA PRISCA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CATISFACTIONS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHAVE DOURO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COCA COLA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COPY&amp;PRINT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D.DUARTE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DELMONTE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DOMESTOS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DYSTRON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ERU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FAPIL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FIUZA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRICARNES&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FUM SERRA DA ESTRELA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GLADE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GURONSAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HENDRICKS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IGLO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KENWOOD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LABUTES&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LAY´S&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LONGA VIDA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MARGAO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MERCI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MOINHO S.ROQUE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MONTE PELADOS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NACKIS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NICOLA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OLÁ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PADARIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PASQUIER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PERSIL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;POLIDENT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PROVA REGIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;QUINTA DO OLIVAL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;REAL LAVRADOR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RODANOV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SAN BENEDETTO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCOTCH BRITE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SICASAL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SONATURAL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TAPADA DOS MONGES&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TIAGO CABAÇO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TULLAMORE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VALPORTO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VILA DE FRADES&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WC PATO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot; LANDAU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AJAX - FABULOSO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AMARELEJA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ARLA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BALCONI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BEN &amp; JERRY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BOKLUNDER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BRAZ &amp; IRMAO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CACHO FRESCO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CARLSBERG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CASTELLO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CERELAC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CIDACOS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CONDESTAVEL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CR&amp;F&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DANONINHO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DICLOFENAC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DULCA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ENCOSTA DA SERRA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EVAX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FESTÃO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FONTE DO PICO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FRUTAS&amp;VEGETAIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GAROFALO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GRÃO VASCO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HARMONY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HIPERLUX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IZIDORO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JOSÉ DE SOUSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KRUGER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LAICA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LINIC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MAGNESIUM OK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MAYBELLINE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MINERVA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MONTANHEIRA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MR MUSCLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NESCAFÉ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NUTRIBEN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ORIENTE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PAPSTAR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PENHA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PITEU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PREMIUM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;QUINTA DA AVO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RAMBOL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RICARD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SABORES PENELA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SÃO MIGUEL DESCOBRID&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SERRAS DE AZEITÃO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SOCERAMICA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;STRONGBOW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TAMPAX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TERRAS DE XISTO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TRESEMME&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VAHINE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIBROCIL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VINHAS DE ALGERUZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YOCO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:brand_desc:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;DODOT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DOVE&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CORINE FARME&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;JBABY&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;HUGGIES&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PRIVATE LABEL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;LIONFRESH&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:prod_unit_price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[sum:prod_unit_price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:Calculation_573364577749786628:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:tran_prod_sale_amt:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_amt:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_discount_amt:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[sum:Calculation_573364577749786628:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:tran_prod_paid_amt:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_paid_amt:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average unit price Vs Price paid'>
      <table>
        <view>
          <datasources>
            <datasource caption='transaction_table.csv+ (Multiple Connections)' name='federated.09ndoxy0primms11jfvus1khvso2' />
          </datasources>
          <datasource-dependencies datasource='federated.09ndoxy0primms11jfvus1khvso2'>
            <column caption='Percent Discount' datatype='real' name='[Calculation_573364577749786628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(-[tran_prod_discount_amt])/([tran_prod_sale_amt])' />
            </column>
            <column-instance column='[Calculation_573364577749786628]' derivation='Avg' name='[avg:Calculation_573364577749786628:qk]' pivot='key' type='quantitative' />
            <column-instance column='[prod_unit_price]' derivation='Avg' name='[avg:prod_unit_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tran_prod_paid_amt]' derivation='Avg' name='[avg:tran_prod_paid_amt:qk]' pivot='key' type='quantitative' />
            <column caption='Brand Desc' datatype='string' name='[brand_desc]' role='dimension' type='nominal' />
            <column-instance column='[brand_desc]' derivation='None' name='[none:brand_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[prod_id]' derivation='None' name='[none:prod_id:ok]' pivot='key' type='ordinal' />
            <column caption='Prod Id' datatype='integer' name='[prod_id]' role='dimension' type='ordinal' />
            <column caption='Prod Unit Price' datatype='real' name='[prod_unit_price]' role='measure' type='quantitative' />
            <column-instance column='[tran_prod_paid_amt]' derivation='Sum' name='[sum:tran_prod_paid_amt:qk]' pivot='key' type='quantitative' />
            <column caption='Tran Prod Discount Amt' datatype='real' name='[tran_prod_discount_amt]' role='measure' type='quantitative' />
            <column caption='Tran Prod Paid Amt' datatype='real' name='[tran_prod_paid_amt]' role='measure' type='quantitative' />
            <column caption='Tran Prod Sale Amt' datatype='real' name='[tran_prod_sale_amt]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:prod_unit_price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:tran_prod_paid_amt:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:prod_unit_price:qk]&quot;</bucket>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_paid_amt:qk]&quot;</bucket>
              <bucket>&quot;[federated.09ndoxy0primms11jfvus1khvso2].[avg:tran_prod_paid_amt:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]' direction='DESC' using='[federated.09ndoxy0primms11jfvus1khvso2].[avg:prod_unit_price:qk]' />
          <filter class='categorical' column='[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:prod_id:ok]' member='999145629' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159795' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159797' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160757' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160986' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161301' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161309' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161506' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163036' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163926' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999177424' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180011' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186287' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186305' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999192250' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194228' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194344' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194522' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223446' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223495' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223699' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223700' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999263158' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999266679' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999270898' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999274547' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999293819' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305163' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305631' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999335860' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999346780' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349379' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349380' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999358617' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361007' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361008' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361009' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999405315' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</column>
            <column>[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' />
              <text column='[federated.09ndoxy0primms11jfvus1khvso2].[avg:Calculation_573364577749786628:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk] / [federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names])</rows>
        <cols>[federated.09ndoxy0primms11jfvus1khvso2].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Diaper Trends By Brand'>
      <table>
        <view>
          <datasources>
            <datasource caption='transaction_table.csv+ (Multiple Connections)' name='federated.09ndoxy0primms11jfvus1khvso2' />
          </datasources>
          <datasource-dependencies datasource='federated.09ndoxy0primms11jfvus1khvso2'>
            <column caption='Brand Desc' datatype='string' name='[brand_desc]' role='dimension' type='nominal' />
            <column-instance column='[tran_dt]' derivation='Month' name='[mn:tran_dt:ok]' pivot='key' type='ordinal' />
            <column-instance column='[brand_desc]' derivation='None' name='[none:brand_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[prod_id]' derivation='None' name='[none:prod_id:ok]' pivot='key' type='ordinal' />
            <column caption='Prod Id' datatype='integer' name='[prod_id]' role='dimension' type='ordinal' />
            <column-instance column='[tran_dt]' derivation='Quarter' name='[qr:tran_dt:ok]' pivot='key' type='ordinal' />
            <column-instance column='[tran_prod_sale_qty]' derivation='Sum' name='[sum:tran_prod_sale_qty:qk]' pivot='key' type='quantitative' />
            <column caption='Tran Dt' datatype='date' name='[tran_dt]' role='dimension' type='ordinal' />
            <column caption='Tran Prod Sale Qty' datatype='integer' name='[tran_prod_sale_qty]' role='measure' type='quantitative' />
            <column-instance column='[tran_dt]' derivation='Year' name='[yr:tran_dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:prod_id:ok]' member='999145629' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159795' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159797' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160757' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160986' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161301' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161309' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161506' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163036' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163926' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999177424' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180011' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186287' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186305' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999192250' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194228' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194344' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194522' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223446' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223495' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223699' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223700' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999263158' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999266679' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999270898' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999274547' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999293819' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305163' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305631' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999335860' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999346780' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349379' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349380' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999358617' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361007' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361008' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361009' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999405315' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]</rows>
        <cols>([federated.09ndoxy0primms11jfvus1khvso2].[yr:tran_dt:ok] / ([federated.09ndoxy0primms11jfvus1khvso2].[qr:tran_dt:ok] / [federated.09ndoxy0primms11jfvus1khvso2].[mn:tran_dt:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Effect on Percent dicount to Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='transaction_table.csv+ (Multiple Connections)' name='federated.09ndoxy0primms11jfvus1khvso2' />
          </datasources>
          <datasource-dependencies datasource='federated.09ndoxy0primms11jfvus1khvso2'>
            <column caption='Percent Discount' datatype='real' name='[Calculation_573364577749786628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(-[tran_prod_discount_amt])/([tran_prod_sale_amt])' />
            </column>
            <column-instance column='[brand_desc]' derivation='Attribute' name='[attr:brand_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[category_desc_eng]' derivation='Attribute' name='[attr:category_desc_eng:nk]' pivot='key' type='nominal' />
            <column-instance column='[sub_category_desc]' derivation='Attribute' name='[attr:sub_category_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory_id]' derivation='Attribute' name='[attr:subcategory_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_573364577749786628]' derivation='Avg' name='[avg:Calculation_573364577749786628:qk]' pivot='key' type='quantitative' />
            <column caption='Brand Desc' datatype='string' name='[brand_desc]' role='dimension' type='nominal' />
            <column caption='Category Desc Eng' datatype='string' name='[category_desc_eng]' role='dimension' type='nominal' />
            <column-instance column='[tran_dt]' derivation='Month' name='[mn:tran_dt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[brand_desc]' derivation='None' name='[none:brand_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[prod_id]' derivation='None' name='[none:prod_id:ok]' pivot='key' type='ordinal' />
            <column caption='Prod Id' datatype='integer' name='[prod_id]' role='dimension' type='ordinal' />
            <column caption='Sub Category Desc' datatype='string' name='[sub_category_desc]' role='dimension' type='nominal' />
            <column caption='Subcategory Id' datatype='integer' name='[subcategory_id]' role='dimension' type='ordinal' />
            <column-instance column='[tran_prod_sale_qty]' derivation='Sum' name='[sum:tran_prod_sale_qty:qk]' pivot='key' type='quantitative' />
            <column caption='Tran Dt' datatype='date' name='[tran_dt]' role='dimension' type='ordinal' />
            <column caption='Tran Prod Discount Amt' datatype='real' name='[tran_prod_discount_amt]' role='measure' type='quantitative' />
            <column caption='Tran Prod Sale Amt' datatype='real' name='[tran_prod_sale_amt]' role='measure' type='quantitative' />
            <column caption='Tran Prod Sale Qty' datatype='integer' name='[tran_prod_sale_qty]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:brand_desc:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:brand_desc:nk]' member='&quot;CORINE FARME&quot;' />
                <groupfilter function='member' level='[none:brand_desc:nk]' member='&quot;DOVE&quot;' />
                <groupfilter function='member' level='[none:brand_desc:nk]' member='&quot;JBABY&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:prod_id:ok]' member='999145629' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159795' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159797' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160757' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160986' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161301' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161309' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161506' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163036' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163926' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999177424' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180011' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186287' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186305' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999192250' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194228' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194344' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194522' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223446' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223495' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223699' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223700' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999263158' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999266679' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999270898' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999274547' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999293819' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305163' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305631' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999335860' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999346780' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349379' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349380' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999358617' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361007' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361008' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361009' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999405315' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</column>
            <column>[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]' num-steps='5' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:brand_desc:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:category_desc_eng:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:sub_category_desc:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:subcategory_id:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09ndoxy0primms11jfvus1khvso2].[avg:Calculation_573364577749786628:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:brand_desc:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:category_desc_eng:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:sub_category_desc:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:subcategory_id:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:brand_desc:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:category_desc_eng:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:sub_category_desc:nk]' />
              <lod column='[federated.09ndoxy0primms11jfvus1khvso2].[attr:subcategory_id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk] * ([federated.09ndoxy0primms11jfvus1khvso2].[avg:Calculation_573364577749786628:qk] + [federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]))</rows>
        <cols>[federated.09ndoxy0primms11jfvus1khvso2].[mn:tran_dt:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Seasonality in Diaper Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='transaction_table.csv+ (Multiple Connections)' name='federated.09ndoxy0primms11jfvus1khvso2' />
          </datasources>
          <datasource-dependencies datasource='federated.09ndoxy0primms11jfvus1khvso2'>
            <column-instance column='[prod_id]' derivation='None' name='[none:prod_id:ok]' pivot='key' type='ordinal' />
            <column caption='Prod Id' datatype='integer' name='[prod_id]' role='dimension' type='ordinal' />
            <column-instance column='[tran_prod_sale_qty]' derivation='Sum' name='[sum:tran_prod_sale_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tran_dt]' derivation='Month-Trunc' name='[tmn:tran_dt:qk]' pivot='key' type='quantitative' />
            <column caption='Tran Dt' datatype='date' name='[tran_dt]' role='dimension' type='ordinal' />
            <column caption='Tran Prod Sale Qty' datatype='integer' name='[tran_prod_sale_qty]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:prod_id:ok]' member='999145629' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159795' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999159797' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160757' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999160986' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161301' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161309' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999161506' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163036' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999163926' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999177424' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999180011' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186287' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999186305' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999192250' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194228' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194344' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999194522' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223446' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223495' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223699' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999223700' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999263158' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999266679' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999270898' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999274547' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999293819' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305163' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999305631' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999335860' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999346780' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349379' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999349380' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999358617' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361007' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361008' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361009' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999361010' />
              <groupfilter function='member' level='[none:prod_id:ok]' member='999405315' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline degree='8' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#0000ac' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]</rows>
        <cols>[federated.09ndoxy0primms11jfvus1khvso2].[tmn:tran_dt:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='93892' id='5' param='horz' type='layout-flow' w='98698' x='651' y='1018'>
            <zone fixed-size='284' h='93892' id='3' is-fixed='true' type='layout-basic' w='23108' x='651' y='1018'>
              <zone h='31296' id='1' name='Diaper Trends By Brand' w='23108' x='651' y='1018'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='62596' id='9' name='Seasonality in Diaper Sales' w='23108' x='651' y='32314'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='93892' id='7' name='Effect on Percent dicount to Sales' w='75590' x='23759' y='1018'>
              <layout-cache minwidth='314' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='4072' id='6' name='Diaper Trends By Brand' pane-specification-id='2' param='[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]' type='color' w='74287' x='651' y='94910'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='4072' id='8' name='Effect on Percent dicount to Sales' pane-specification-id='1' param='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' type='color' w='24411' x='74938' y='94910'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Diaper Trends By Brand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_desc_eng:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:cust_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[tmn:tran_dt:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[yr:tran_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Seasonality in Diaper Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_desc_eng:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:cust_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[tmn:tran_dt:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[yr:tran_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Effect on Percent dicount to Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_desc_eng:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:sub_category_desc:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:subcategory_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[qr:tran_dt:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[sum:tran_prod_sale_qty:qk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[yr:tran_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Average unit price Vs Price paid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_desc:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_desc_eng:nk]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:category_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:cust_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id (product_table.csv):ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:prod_id:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[tmn:tran_dt:ok]</field>
            <field>[federated.09ndoxy0primms11jfvus1khvso2].[yr:tran_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Diaper Trends By Brand'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09ndoxy0primms11jfvus1khvso2].[none:brand_desc:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Effect on Percent dicount to Sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09ndoxy0primms11jfvus1khvso2].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Seasonality in Diaper Sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Average unit price Vs Price paid' width='384'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3gc1dW439nZrl31bhVbxbJsy70XwI0SMC1ACHxAMC10ML0FSAKkEcgX
      SvhCEgLkR+jdxr03WZat4ipZtmT1utKutu/M74+VV5Yl2ZKQbdma93n0PLqz99w50+655dxz
      BVmWZRQUFBQUBh2qM62AgoKCgsKZQTEACgoKCoMUxQAoKCgoDFIUA6CgoKAwSFEMgIKCgsIg
      RTEACgoKCoMUxQAoKCgoDFIUA6CgoKAwSFEMgIKCgsIgRTEACgoKCoMUxQAoKCgoDFLU3f0g
      yxKFebm4fQKGIDPp6WloRL+9cFqbKa1rJiMl6ZQq19JUT1FJaYdjgqBh7PgxiEL/nWfZt58x
      8+KrMWm6t4eSz0th/i48koAoqklIGkpkeEgPSpc5uH8PFpsTQRCIjIkjMT4OoR/1B/C57Xy3
      fBVXXLawfwvurR4eFwUFBfjk9gtMGzGSkCADR0r28f4HHxEUP5yH7riRkn15fPDR58QPz+KO
      G689YzpXlB6kut4CQHRcAgnxMfTz4+kXNqz4loxp84k269ldsJsRo0Yhqgaipp2RJR95O3Np
      bLGRMDSN9KEJCN18BO6WGpZt28fCBeefZi0HHyfoAfh4/eVXyMvLY8XSb7jlplvIzt8LgMvW
      SN6eA6dcuabGOvLy8sjN2cxvfv078vLyyCvcjdTP59m1fQsOz4lL9bpsvP7HP5OXl0dO9jZe
      fPpR3v9ieY/Kf/f1V8nZlcfO3Fz++fZfeOrFV/v9GiSvh63Z2/u51N7jaK7jr395w/+s8vLI
      27WLxmY7IPPO//4vV9/0S+6/7ecg+/jr629w0y8f5Lbrr+7VOf75z3docXj6TeevPvgHazdt
      Iz8vj7dee4WXXnsH6TTGSCw9sIsvl286ab59+TlYWp2ATM727fikU6vj9198yIHK5i5/e+Nv
      b+H19fAtliVeeOoR1mzLw2Gz8tE//sqny7Z0m91jbyEnr6AvKiv0km57AACRccksWrQIgKa6
      Cu578Fneff8fmCKimTJGC/hbxgW7dlJZU0dUXBITx49GAEpLDqDR6cjO3kF0QiozJo8F/D2L
      7M3rOVxZz5TpsxmWEIPHYaWywUpcZDA7duQxfup09GoVyamZLErNxO1oID+vIqCLLEkUlxwk
      NSWFvNwdxA3LIDrUxLbN6ymramDqjPNIHhKN295CVZON1voq9hUfJmvCFNKHJQLgdtrZtm0b
      bp9AQ7PNfy2Sl+1bt9BktZM2fCRpbXmPEp+UGtDB2XIVTz3/Z/7n8jns3X+QUaNGtOnmY19R
      MZkZGQE5rc7Mzb9YhEEEZB+P33MPrR4ZjbuFuhYnUcEGdubvZsKUaTRXl1Owdx+SoGbS5KmE
      BRtx2izUtTixVJdRdKiccZOnkZIUD0BDbSU783ajFgXcXl+fX4T+JCllZOA++ZHZV7CLBoud
      prpy9nlsSA4LFodIXXkJbls4I9JTKNyVw+4Dhxg1djKjM4YB4HU7yc7OxumBiZMmUV9VSm7u
      Toam5WAy6hg7diw6jRg4z978XPL3FpOWmcWEMSMRgJKDBwg2m8neth2tOZw55808ruUscs31
      N5IcHQKyxKP3PUCtxUFsmIH8HdnsPVjKmAlTyUxLxudxUlpRQ/KQWHbs2EHGmIkEGzTk79xB
      bWMzI0eNY0hcJFZLPWvWrkfUBzN37gUYtGqsTXW0eqC8ZD9llXVMnTmbUIPI9h07yCttJSFM
      S1RsIkMTYwOa+bxucrZto8Xhpqq2qe2oitnnz0Td1g12O1vZtm07XkQmT56Cyaij4vBBtmTn
      EBGXxHkzpyGqBMoPHyQiPhmDVo3bbqOy3sLQpASOHD6IOTSCHdlbsHtg3vz5WGor2JGbS4s6
      lua4YNIysggLNgCwb08BO3N3sn37dkS1jokTxoLPzbo1q2mwOpkxazZDYiLbr8FRT5UzlBfu
      vh1BgEsXXo4k+Y1HU101uwoK8Xhh3MTJREd07lUfKtpLdm4eQ9NHM2X8KARBoLG+mu05O9EZ
      zUyePIUgg7bvL+wgpsdzAGFRQ5gzOYW8feW01pbx/hffArC3IJsteXsJDglh+efv8eHXqwD4
      5L23+eu7nxAdG8fqz9/jX18sA2T++39/YmP+IYanJPGH557kcI0FW20p777/bxbf8yC79hzA
      d5KGjSx5+b//e5tXn32K71ZuwOly8+Hf/sDWPWWkDUvklWefpKy2mebqEu6++x7W5ewhKjKc
      3/7qV9i9Mh6nlcX33c3hqiYEyU1dg//D+ujv/8umXQcw6rV889knOI9r4Miy3/g0N9Xz/95/
      n9SsyQgqgX+99SqHqv1DCNUlhfzro2866yzLuBytrFzyNW5TAka1QEPZft778H0W3/cwhftL
      kLxuPv78M7yIuK31PPLoE7h8MnWl+7j7nvvYml9MRHgwv3n+BZw+mcP7cnnsyefxSAKW+lqc
      J+nFnD5kZPnYP6ivrcHmcFJRUU5VTR01VZXYHXYqysupbWhi7Xcf8d/v1pKRnsYHb/yBbQUH
      8bntPP7wwxworcFla2Bjdi4NDXXYmq1UVJRTUVHVoRW87rv/8u4nS0lOTmbpp+/x0TdrAHjz
      j7/m1TfeRR8cRs6ab1iy9gQ9JUFALYKMzIov/s3nKzaTkZ7GP/78Ern7yvDYGvn7v97l2Ycf
      ZmP2Lrw+ibf/+BuWrNmOiI/la9fisjXx5JOPY4qIQ26u4oXfvookyxwsyOae+x5i7+FqQk06
      XnzhJRwuB7VVtTQ3NlBeXk6LtbX9Lvrc/OrR+8ndX4ZGFKiqqQv89o+/v4VXAq+jhQfve4gj
      tU20NlWzJTefw3tyeP73rxEzJInDhVv47Z/fRZbhu0/eo8JiB6CluoSPP18KwHcf/4unnv8t
      TlmDpbKIt//5X6wtFpotVmqrKig/Uo7L0964qK+rprW5hfKKCioqq5GReOm5Rzlc30pcZAjP
      PfE4h6ubAvlFQxiq5gN8+OlXWFudAKhU/qrn8y8+odUto5KcLH7wQWzujo2Y/bnrefWtfzE8
      I5M1n7/H16u2IbttPLL4CQStnub6SlasWtert1OhnRP2AI4nJjwMe6sVQtvtxqhxM0gZnkVp
      aTkXXbyAj9fthivmoVKpePDRh4kNUjNlwmgefvx5brliDpvzjvCXtx5HBdxxSy0rVm3impnJ
      rF+1ibff/Tsjh8X1SJfS3fnMeOglrpw/FZ/bwfY9Nbz+xlOogNturGLVmq1cNjmG8y+5grtv
      uwmALau/o9Xto3jjMsYu+Bk3/ewnAGxfvwyAxmYLiVkTmD5zNuedP6fTOQ/uzeGRRx/F3mrF
      6RV57vn/QVCpuebKS/ji6x945K7rWbF8ORf/5LIOck57A08+thjZ66ampoF7Fz8ZmMNYt3oL
      f/v7O6QlRAFw330PUH6kjGZrNJGmtTRY3QAsuOKn3PGLnwOwafUSHB6JLz77lMXP/ZbRw2Lw
      2JvZVrivZw/yFFOYu5HFi6vbUmoeefpZZs27kB++WcoVV16FVgVILpYsyebKq65ChcxTD/2b
      J175M6EGDdEP/JJ/fLkSc+swEsbO5hfHzQ8sWfYDly68gnDTsa0+mSXLN/Ls714jzKhl4pgR
      LH7st/xs4RxM4VE8/twzBGlUxOgcZFfU0REfP3z3NeFmPXt35WBIHkVMqIHX1ubwqz++jkmn
      Juy+O/joh1WMvOUicjdn8/wf/8qMccOxNxzhQL2PP//+blRtY9rbV33JxLnXMnf2dGA62Y8u
      psHqr/iu/p9b+J/LLwRg9ZoVmMJimTNnBsKeFq66quP8TXHBNkyp07h70Y0AFOV2ruhyN61k
      /NyF3HDt5YFjf335GR58/DmyhsUwe+Y0HrvnPpod7hM+s8eee4GUSBP2ulR+96+vyRg1jlEj
      U5mw4FLGpUR2yDvr/AV8uXQFV15xJRq1iuaKfVj1ydz682sQBAgRPXzz3SoeuP0av4Cg4bW/
      vsWXX3zGfXcuInnkeBY/9AChQTpuv/N+KiuO0GhpIT3RTFldK8li+7m++eJrHnn6RYZFmRid
      nsAjz7zGZTNScYt6MjNHkhAb3e1cgsLJ6bkBkGUOHC5j/uxooD5weMvKr/nw23XMmDoVtbcF
      6ZgW2dFhVFFjRKNXIftcVB0q4dcvvACAy+Vg8qxLALjwyit6XPkDJI8ez5XzpwLg8zqpLDnY
      Xq7TwdQLLu1WttliITV1RKfji+58gI8/+ZiHH/yE8PhUnnr8IQya9rcxbeQkfvu73wBgqS7j
      0V//if97649MOu8i3vvkIZr/ZyG5e8q47s6OZeuNEbzwp9cwiOB1OXjs4cWkDX8VgEuvuSZQ
      +TtbG3ni0SdJHzOZuOhwmq1O5BOM8zpdbhLionpwt04voyfM5vnnHz/u6Al6J7KX+qpq/vy7
      l1AJ4PN6GJI6ltqaehLjeuhoIHvx+fSY2oYCNEYzQYKnc2+ym9sZExdPbJiJ8ZOmkzo0EQE3
      dRWV/OHl36ISwOt1M2zEZAAmXzCXGeOGA/53KSI8PlD5A1gaWti4YgVle7b583i6qaBO0tO1
      WiwMPYmjRW1NPYnxUzoca25yExt1dChFICrYiPMk4/U/Zl+olqYWYqJiA44N0VFROHIrO+Qx
      mEO54ZbbueGW21jy0T9494OPeeT263hy8UPEpI0leUg0jU02f/1xjAGwNFh4969/RKMSAImo
      +FhEQxRP3nsT773zBqXltfxs0V0smDGhz/oPZnpoAGT27NrCniofD6dEYSuvDxxfvWIlz730
      GrEmNQ1H9rL9vfaJ0aOvfdn+XNTaaATRQEx8HA8/8QwhBg2yLNPaasfTcKj3mh/zTam1RmLi
      41j85DME6zXIskRrqxNHbdcT1ebQUHbtKWLupNEgy0iSFwCV3sSiO+9lETL/97tfs7uogkkj
      u/4AtXodHq+/VafWBTF/xjje+eubJGbNRK/uvkWiUqtRqyU8XgkNIBxTC5TvyyNl8nzuW3Qd
      siSRl3PiiUGtVk1JaQUTMhKRZQlJHihDQL1EUBM3JJZb7nqA1PhwAKw2G41H9rDs0w389LJZ
      qAR/fSkAks/XeQJSUGM0uCitaiQtPpym6jJa1cGc4FEcg8j4iZP9cwABNMQNieX2ex8mqe24
      1WYDT0sHyYjYeMpLd+Nw+zBoRWQgLiGe4VlTeOKBXyAADrsdjU5HRbfXL+B2dW6hm0JD2J+z
      B/nSeQiAz9d5jictI41P1m3j4gvGIbTdo8SkMHILirhoehY+t4OSOivBurZPve116+p8PdUL
      wOfx4pNlNEDkkCEc2PcpPulGRJVAXmEhMbFDAnk9jhbqbB7ioyIAgZEjM8ldU0hT+QEMiWNY
      /MDdABzek93pPPEJsUy4/BdMz/LPCVltNiSvi4xxM3hu0iw8TgsPPfAb5k+f0O+edYOBExqA
      Iwfzuffee5GRMAVH8/LLzx83aSAwedpUfv3kkwyND6GxuQmVeSjgHyv/3QvPERNmpPhwOc/+
      +mVUoppf3Hw19999N2OzMikvPchl19/NhCHCyd3uVMef+Zif1DpuumEh9999D1mjMyg/XMIV
      N97L6OhOhSAIAlPOu5jPFj/Mi2X78Nqb2b3nMLcD/3n7NYobnMSEm9hX1sB1SbEdpIt2b+eB
      Bx7AJ0m4nC5uvOXuwP245IqruOraG/jf9z7vpLrT0cCjDz2AgIzL4WD8zItJjjZR2dAxX1xK
      Jvmvv8drLZVUlR+mvKah65daUCEA111/I8+8+BTjJkygsvQwdrXxZHfxtJCfs457721z35Vl
      bn/wacZnxCOojmnaISAEfHkFbr7tZn7z1GJGjh5NffURxs++nJ9fcQEpoet48JHHCQ9SkzFp
      LjdcMZ/zxmfxzNNPMTQhjnvuf5Awkw4QuGXRIl569gnGjhtNwa487nzkGY73khQEoYshgy5v
      MrfcdhPPPfYQo7NGU1tRytT513DZjLQOubRBEVx/+QXcd9/9pCXHIgXF8tT9v+C7Zc/x+JPP
      Ehqkpsbi4ZWXXuh8BpX/OQ4dNpKC1x/hd/UHGTl2OpdfNBuA9KxpqD7+kqefewG94CV/1y7m
      3tyxjBETzyNk5QYWP/E0JrWPCXMu56obbuXxJ56jcGsWhw8UMvfamzBq1WRkjuQPLzzP0PhQ
      qivLiRs+rdMdEGi/PzOmzOSlP/yK0cOHcvnP7yJzaHtv87ysVBY//jRx0TE88dhDXDQllQcX
      P8Gw+FD2lzXwpz/9PJBX9rp46dmnUAeFERlioLSihqdfeImQCD3Vu//Mq6+5qas8THllNZcc
      92yuX3Q7jz/1AmsyR9PaVEtMynhuuWwaj734ezJGjKS+vISJc+d3/QgVTorw4/cElmluakRS
      aQgLCQ4cffWFR/jZQ7/FLHgIDjZ3+Oh8Xg9WWysmczBqsf/Woh0t12wORjxJubLso6amhuDQ
      CIx6XeB4q7UFq91JdFQUql74WNsaK3nmlXd4/Y8v/qh30et2UdfYRFRUdI/ujcfloL6xmajo
      nuUfyEg+Hy1WK8YgE1pNe9vE6WjFK6kwBRkCx2zWFlCpMQV1NHoet4vqmlqiYmLRazX9oJOX
      FquNIJMZjVrsNp/H7cLudBNsNgXedUerDa8sYAoKOmnr1Of1YGm2ERoWgnhsY0eWqautQW8K
      wXzM9R+Pw25DQk2QUe/XW/JRVVlJcFhkB7mmxnoEtZ6QYFOP3lOnoxWnRyLkmOs6irW5GZVW
      R5BB35ZuoqXVRVxcTIchsfay7Hi8EiZTUKAsyeehpraeiKhotN3cX1mWaGlpQacPQq/zP1NZ
      kqirq0VvNBNsDurBlSh0RT8YgK559YVHuPHR3xNr6tU881nJpuXf8O/PvuX2+59gSlbayQUU
      FBQUBgCnzAAMJiTJBwgB1zYFBQWFswHFACgoKCgMUpQmq4KCgsIgRTEACgoKCoMUxQAoKCgo
      DFIUA6CgoKAwSFEMgIKCgsIgRTEACgoKCoOUc3+VVn8jS2xat4ZGqz+sbuaYSaQl9yyInavV
      wvJVG9AajEydNp1Qk4Ga2lpiYmJOpcYKCgoKXaL0AHqNQFh4BFvXrcIh6zGoRYqKiti3O5/a
      2hrWrV3bFtvfw97CfDavX0dpRS0AtuZqlmzcgWRv4rFHnqCi6ghPLH6G7B07T7oHgoKCgkJ/
      oxiA3iIIjBwzjqTYGEZnTSAyVMOzD93PJ9+spKz0EG6fxJuv/o6qhkb+8PIr1Dc18MYbfw+I
      x8QlcskV1zAiOZzi0lq8soTD7jiDF6SgoDBYUQxAP5CYMZbnnlpMWVEB23PzcXldOJxeEpKH
      c9G8C9ALHfevlSUflmYLQ1PTiY6IYdbsGf26yb2CgoJCT1AMQB8RBAFU/tC5RkMQAtDc0Ijb
      5cDpdKNSqRBEdVte/20WgO3rfuD+++4jcvhMkqKCiTJ7+P2f3sR9lobyV1BQOHtRYgH1I7Is
      4XC6MBq6D9vbSUaS8Ph8aDU/PnSxgoKCQm9QDICCgoLCIOWMuoFKkoTL5cLQixbz2UR9fT2R
      kZEnz3gW0tzcjMFgQKtt35hdkiRaW1vPoFYDH5/P5x8eVPYvVBgAnPF1AF3tc3qu4Hb3YN/V
      sxSPx4Ner+9wTKVSYTabz5BGZwd2ux2tVotafcY/PQUFZRJYQUFBYbByThqAmopSli5Zwp4D
      h0CWKcjNZsXqdbi9EpLPy66dbQuvZJm9+bl8v+QHGlvOjqELr9vJ5g3rWLF6HQ63F2tTPUu+
      /55D5dUA1FaWUVZRjdftYsvGDWzYsIGt23KUhWYKCgqdOOcMgCz5KK2oYe78+RRu30pV+UFK
      G9xkpcawZmM2m9asZvu2HNwyVB3eR1m9iwvnz0F3gg2/BxLlR0pJTBvJqJRoNm/NY/nyFcw6
      fw7ZG1bTbGtlc/Z29h04jKjRMm7CRMaNGUXJwYM/aqN6BQWFc5NzzgAIKpEpkydz+EAhQlAw
      DbW1ZGaOJCYhFa/Lxuz5F5IU55+YLSs9RGNjDd98+x1NtrNjNe7Q1AwizVo2bsohPT0BrTGC
      YJORoUmxuCU188+fgQr/OgWD0cjh/YWMnjwDlWIBFBQUjuOcMwAgs3XdCsqbfFxz5aVoNRpc
      HjeS5EP2dVxtJaq1zL5gPgt/soD8ndvPkL69o7W5jk8+/Zb5C68mMTYCSfYC4HI4EcWOj1Py
      utlzuIbRaYlnQlUFBYUBzjnniiD5vOTsyic5NYOlS1dwwflT+PiTr9lj1DBiwkw2rlvFvoMl
      uJf9wJRxY1i65CuiQo1EDx11plXvEfk52xB0GjatW82IrAmEGeHbJUux2r1Mlm0sX7OBsqom
      YuOj0DjrSMuaqLT+e0BZWRmiKDJkyBC2bdvGxIkTe+ypU5CbTbXFwfnnzUKrFgGZfYW7OFha
      xfCRWaQPUwywwsDkjC4EkyQJu92OyWQ6pefxejx4fRJ6va7Tbz6vB4+3699+LJWVlcTHx/d7
      uR2QZewOO3qDEdVp9C2vr6/HbDaj0/X/fTvdNDc38+abbyKKIvHx8RQVFfGrX/2qRwagrryI
      7H11TEgNo6DMyoXnTwFkjpSWExcfy5eff8YV116Pti3Yk+IGqjCQGBRvoVqjQd1NpAVRrUE8
      m++CIGA0Bp1pLc5qjEYj8+bNC/QArrvuuh5X0HVVVYwYPYa4GBN5e1a2HRXQqrx88fkn6EPi
      0KgEvF4vsizj9fqH7M7l9S8KZw9nZdVns9kQRbHXK4jtdjtGo7HX5zudK3q9Xi9Wq5WwsLBe
      y9lsNkJDQ3sl19LSgl6v77Cid7Ch0WiIi4vj3//+NzqdjtDQUG6//XZUqpNPkWl1WpxOF5JP
      i0duzx+dMJTLLgvny6+/w+nxYtD6PzWPx6P0ABQGDGflW9jX1lNf5U7nil5ZlvF4PCfP2IVc
      X/Q8WiENdiorK7nkkkuYNGlSr+QSUzP55LOv2KdXkznpPHZs2cyIMWNYuXIlZrMZLxrEHhgS
      BYUzwVlpABQU+puoqCjeeecd1qxZQ2hoKLfddluPegC6oBB+fsMN7XNMqf4J38sXXo7L7Uan
      0ylxfxQGLAPKAMiyRM6WTTTYXMyYOYvgID1WSyPltRYyh6d0Lyf52L5lE42tbmbMnIXZoCEv
      dzvV9S1MnTmTMHPXY+Quu5UNmzajNYYyY/oUrA3VbM/Nw2AOZ/q0yai7cZ9xtrawcdMWdKZQ
      ZkybgqgS8Hmc5Ozax9TJ47rVs66yjOydBSSnjmD0iFRkycfuwkJSR4zGoO1uIZrM/sI8isuq
      GD9pKvHRYZQc2MO+4lJGj5tEUnx0l1KSz8O2zZuwumRmzpqJ6HOyLXs7bklk+ozpmAxdT95K
      Xg9bN2/C5pGZOXMmQXotyBK5O3IZOWY8+m71PLuJj4/nnnvuAUCtVveq0u5qjklQqTrFSlJQ
      GGgMqL7pzs2rEULimTVlHN9+8z0eRzOr1m2koGD3CeVyN69GHZ7AzMlj+fbbJVhqKtGGxDJ7
      +gTWrl3XtZAss+T7bxk7aQYJYTpWb9iOzwczz5tDmMpBYXFZt3JLl3zHuCkziA/WsGbTDkBm
      4+oV5O8v7lZHr6uV5Ws3MX/BhVTtz6OkqpGcbRvYsSOHFnv3Qz7Vh/ZRVN3CgrkXsOaHJdhs
      rTQ2u5k/fy6bNqzpVm7ruhUEx6UyZUwG332/HK/Hy+hxkxk/IpmNm7O7ldu8bjmhCWlMHj2c
      75esAGB//nY25+zC7jp3Jy5bWlrIzs4mOzubv//97yhR0hUGAwPKAFRa3EwclYopNJIQkw7R
      EMLll12CTnNiNauaPYzPTMEcFkVIkJaQuEQyhsaxdu1ahqVndikjS17UpiiiwswMGzEap7WR
      sMgINq76gc0FRaQmxHUj50FtjiYy1ExKZhb2lgZqjxzEpY8mITqkWx1bLbUkpI9Dp9UwdcZE
      Sg9XMHn6BaQnDznhtZVVVTNp4mS0egMZaQm0OGHipLHs3LaJiPih3co1OGBkWiKh0fEYtWAM
      DaOoIIcvv1tGZmbX9wSgySmQmZJAWMwQDBoZR6uFwpI6Jo5JO6GeZztms5mJEycyceJEtFrt
      OR3JVUHhKAPKAKgkL06vBLKMy+PucfwaQfLiCsh5kDxO/vvfjxgz5QLGjRjWjZCAx+0C/MMl
      XklGJWqYf/FPmDhyKLuLuukBCCo8LicAPp8HnySzacNGZLeN4gNF7C/pWk7UaHHabQDYbTY0
      up5NvGpEEbvDH6bCbrcjqlUs/eYztOHJXDh7aveCPg8enwyyjNvjQUBgyqzzuXDuLPIKT9Cj
      CshJuD0edm7djKCCvXsOULBnT490PhuxWq3s3LmTnTt3Mnfu3HNifYOCwskYUHMAk8aN5NP/
      fkxksA6NKYLWxlrWb9lOcfEBNmcPYcaUrsfXJ47J5JP/fkKEWYM2OJqKoj1YHDK7crZQNzSd
      CVkjOskIKjWJ4Qa++vZ7rPUVTDh/ITu3b6Ku2UlLYy2jp3a9MlhQqUkI0/PVt0toqTvC5LlX
      kDk0FgAJiYyUpC7lgkJjcVSvY/nKZoqLirn51tvI2bye/D37KW/2Mn/eXMKDO7uoZo7K4uNP
      v+HgkBgq6lqZpLKzr7gSn8qApamBObO6NgJjM1P59NPPMGl8BEenUVq8m4IDR1D5HIREdz+f
      MiYjhc8+/ZwgtYeQuOHMmDkRgG1b1pE+amS3cmc7ZrOZI0eO4HQ6z9kNihQUOiGfQXw+n2y1
      Wjsc83jccoulQf7u+6WyV+pazmKxdC+35AfZ141cS0tLp2NOh12uOHxAXr8tV5YlSXa5nLLH
      4+2Qp6Kioku58kP75Y3Zu7q9vuPlJEmSW1ttcu7W9fLBIzVdyrjdbrmmpuNvPp9Xtllb5OU/
      fC9b7a4ey3ncLrmpoUZeunyV7JNk2eN2y263u0Oe+vp62eFwHFeWS26qr5aXLl/d7b2sq6uT
      nU5n1z+ehSxbtkzOz8+XZVmW33rrLdlut5+S87S2tsoej+eUlK2g0FvOylAQzRzWHpYAACAA
      SURBVM3NiKLYazmr1dqnHav6GtKhL3Iej4empiaio7v27ulvuYaGBoKCgnrtsXIuhYIAqK6u
      5m9/+xthYWFotVruuuuuHrmB9hYlFITCQOKMv4V2u73XHhd2ux1RFPsk1xdcLhdWq/W0yHm9
      XpxOZ5/k+nI+p9M/n9HbxWdOp/Oc2v5Rp9Nxxx13EBYWxqFDhxTffYVBwY8yAO+88w633nrr
      j1pJajQae92SlySpTz0AoE+VVl97Dn2R83g8eDye0ybndrv71ANwuVy9yj/Q2blzJ9HR0QwZ
      MoSNGzeSlpZ2zvRuFBS640cZgLvuuqu/9DhnWbq1CEurv7JMjApm1piuJ4kVziyTJ0/mjTfe
      4JtvvmH48OFKeAyFQcGPMgB/+9vfWLRokfKxnIDzih5Hqi8CQJ02H8a8foY1UugKURS59dZb
      KS8vR5IkZQhIYVDQq1kui8XCoUOHAn8XXXRRt5NZ9uYG/vDSK9h9sH79WmRZZtm3X9JodfaL
      4qeS8roWPlpVGPhrsp4d20Uq9J0dO3ZQU1PDhg0byM3NVRaCKQwKetUDqK6uJj8/P5AWBIHE
      xMRO3hKyLLNixSrGjhoNgNPlZH/eVvTRaYSb9UiShCzLyLKMz+cLxEjvDZIk9UmuJzJRlmwu
      y38okG6O/Cteb3KvzwVw7Dy1fEw8+O6QJKlLPcvrrGzZUxFIXzw5hWfeXUNFvX/Sd2pmHLdf
      lNmne9KXZ3BUz3OF5ORk3n77ba688koKCgoQxXMz5pGCwrH0ygCMGDGCjIwMvvjiC6qqqhAE
      oUtPnAP52zAnjIC6EpxOJ/amelbuL+amW+/oN8UHG76GYtxb/hVIy6Of4Q/hf0MWDvnTwfNw
      8syZUu+sprGxkfDwcO69917AbwxOhQuogsJAo9dzAEeOHMHj8RAdHY3X6+2yJWgIDifI2cSB
      6hrCyyowhkWw6OJL+Oyrr7jxhp8F4qMf9ebpi0+0SqXqk1yPZFQdW3+yLPXZb1sQQA78L5y0
      nKMG9fh8SZoGrg5aH0gb1Y/gPKbso/8cL7d9bwXFlU0AGLRqrpzdeVV0X57BuVRBlpaWYjKZ
      yM72B8kzmUwsXLhQmQdQOOfpda0WGhqK0WiksrKS0tJSLrvssk7ucknDhpM0DOIiwolLScWs
      kzEGRzB/1iRq6i3ER/Vu16rBRlltM6sKagPpn0xNo/f7mPnJqniXEQWfAiAEReGYspyvNu4P
      /J4arWdM+uDeUnL8+PFkZ2dTVVVFZGQkc+fOPacMnIJCd/TKAMiyjFqtZuHChZSVlaFWqwkO
      Du42f1JaOgCpKf5IkvHJqT9C1d7jcHm5/sXPAulrZqVy008md8r37buv0Fh9BIDE4VmcN7Fz
      K/l0EmfZSkb+7wNp47iv6a8Rd9ndinvLW4G0b9rFkJ7QT6WfnRw4cICNGzdy5513Ul5ezttv
      v81jjz3W4x7A0V6b0mNQONvolQEoKiqisLCQrKwsPvroIyRJ4tlnnx2wy9r1gpsPo34bSLsN
      d7EsOyzgiTQk0sx5Y5OZa8hFCtoLgKhTAWfWAPSVspr2nkN3wz16wd1hKKlVPfa06TdQ2b9/
      P5dddhnBwcGMHDmS5cuXB4YnT4bHYePjT79ApRKYct4C0pJiAZkfvv4SFyocbolrfnpVt5sL
      KSicSXpVc6tUKmpqasjNzeXxxx/n/fffx+12/ygDsCt3B4dLSvzliypuuOmWPpfVE2YVPY1U
      6w9rLKacD2PfPKXnO53EN28mI/+PAAjGSJi9tkdyFfVW7O4WADRqFSOSIqmoawkYyqPHzlUS
      EhL4+OOPA8M+ZrO5x635Iwf3MHbmfEYmBrNkxZY2AwBzL1mIWoRPPv0MnySjwu/1JklSn/em
      VlDob3pVc6empuJwODCbzZjNZmbOnInR2NfRaT+Z9g2MbfqvPyFqgZ4ZgJrGVg7V+mP7qAQY
      Nax3QdBOBWWlpaxfszqQHj9pMt1vEdNOUXkDTre/UgjSiZzuAATbNm8if7d/XiA42MTTj9yL
      O+dfOPKXA+AzR8I9/z7NWp0+xo8fz/jx4/sk67A7MEYZETUGtByt2AVctiY+/f4Hps+5CJ1a
      dc65zSqcG/TKAAiCQFZWViDd14+mP3AXfIKj8AcAVBodLP7itOvw/Tdf09TYCEBiUhIzkmSu
      aHo18LvF90aPynEuexZHvX8jGXXqVHSx3Wxic4r4iXErC0O/A0AwRQP3EqduIFJb6j+mGfiL
      934sLS0tqFQqTCYT1dXVxMTE9KgXEBEdTWFRCWFSGJI+mGaLBVNwMEuXreCKa67HZPCvkj/a
      u1CpVH32fFNQ6G969Rbm5+ezffv2QFoQBG6++eYz8jJHi00ktFVQqP2BzKobbNQ1t/cKRg7p
      fbC47ji2sk9ISuKCufO4oPl9pCZ/y1kdPg9Y2Enu88jzqddkAJAeNrqLHJCiqUIKXEsqLZxe
      A9ATWltb+fLTTwLp9BEjGDd+whnUqP/weDxs2LABjUZDZmYm//nPf1i8eHGPQpzEDh1Bafk6
      tu6q5YK586goKUJnNBARHs6alcsQdUYWzJuDRlS8igYLss+N7LaB04rsbkV2NiN77OC2Ibus
      7WlXW9ptQ3a2gMeO7G5F0IeiispAjM5EFTMKMTwFwXBqPCd7VXOnp6ej0WjIz89nwYIFfP31
      13g8ngHTmnHnf4wj298TUGn1cO8HfSrniCGZpUnti9ZmaiO4oOVtpKZ9AKjD5wLzelSWTTxI
      s9pfubeKPRkQGpgYJGuH3o3N9SBwbhgAu91OYWEhoijS0NDAxRdf3Iv4VgJTZ10QSKVn+ndN
      m3fRJf2vqMJpR/Y68ZXvQLLVtFfgHjuy0wouK7KrxV/Ju23+tNsG3h5EytUYEbRBCDoz6EwI
      hlCEkCEIOjNSSxW+0k14934TyC4Ex/sNQvRIxKgMVJHDUQX3fo+S4+lVzW0wGEhKSuI///kP
      YWFh7N+/f0CNbUaLFsKOtqQ1fd/WzyJZ2e7eG0iPl6f1uazLDcG4vWEABOlMNLc6KatpCfye
      nhDe57IHOhWHizlUXk10XALpqUNB8pGbvZW6ZjvTZszErBfZvn07glrHyFGjMQcZaKytIjsn
      l5jEVMaMGMr27Tn+PYqB0eMnE2bqXdjqnhASEsJ9993HihUr8Hg8VFZWMmbMGGUtwCBFdljw
      FK/Ed3gj3tJN4Dk2FpgAGgOCzuyvvLUmBEMYqpBEBL0ZQWsCndlfuWtNbRW8ue1/E4I2yJ9W
      nXxBqOxoRKrbh69mL1LtHnz1RXgPrgG5rc7VhyBGZyLGjEIVnooqOhNVeAqCqudhTHrddA8K
      CuKRRx5hy5YtPPHEEwQFnfpFRF6vl/9+2N6aT0lLJ+MUnm+o3sEv49o3dw9X9z0wWNHOqbTU
      +LWNG5VEWtAOHF+9HPhdWtR3LySvzYivxX//BUf/V4w/lkMlxQwfP53ivGyqG1oIwYJHH83s
      kSP46vvvuXbhAlpcPsYNi+Pzz7/gumuvYsnyNVx97TXkbljO/iAzY8ZNYOXK1cydNweD/tRF
      nc3OzkYURcaOHYtarVZ8+gcRsiwjW6vwHlqPt2gFvvIckH0I5jg0mZejTl/gr+B1bZW7cOob
      BoIgIBgjUCXPRJ08s11Xtx2pvghf7W6kugP4avfg3vkf8LbN06l1qCIzECPTUUVnIkaNQBWV
      gdBNg7jXBqC1tZXXX3+d5ORk3njjDZ588kk0Gk3frrKHiHg7DD84nYtO6fmCRJl0Y3uMI1s/
      Pm+zyk7m0V4KoBM89HWK9bOoC2jQNACQGpbO9D6XdGoQVALGIDPTz5/Dd98uxSPCrItnoxMF
      YkP0OLwSGq2W6LgEJqQncOhwKYlD0zHqtEyYOIWthSWMTBmCTqPDGBTUu9C1vSQhIYGPPvoI
      h8OByWRiyJAhihE4h5FlGanxEN7ilXiLVwZcw1Xhw9BOXoQ6bT5izKgzrGVnBK0RMX4sYnz7
      +h1Z8iE1liDV7vMbhsYSPEUrofDzNiEVqvBhqCLSUEWNQIwe6e8tGMN7bwDKy8uZOHEil19+
      OR988EGf9qE9GTt35LC7oADwx6m5/ufX9Wv55wqThu7CafevYA4OA6yJnfL4nDo8bb0Elfzj
      XHb7itflRBa0CIILl9uLzqDB4XR3WBxlbXWQMMTIkYo6AJyOVlTiqW1YHEtCQgI333wzPp8P
      nU6nVP7nILIs4avKw1u8Gt+hdUiNJYCAGDcW3XmPoh52PqrwgeeAcTIElYgYmY4YmY5mpN/N
      5Givxle7F6mhGKlmD77qQrwHlrXLGSN7bwCGDx/O5s2beeWVV0hNTe33yh9gpGMDaU3/8CdE
      HdA3A+BRifw97rJAerwphSls6JSvSj8Ep9HfejbrYol067DUt1+XYD7zk9xeqwnrnpRAWu/W
      EuEMw233660zdr0V5MaQLPLi/KGeTUYTvzz1qgbwupwsW/IdbruN2fMuRue18NXnnxEVZkQd
      Eo9WJVC0O5+Wumo0hlBmJCZSuGMbPyxbQU1VJQt/6n/up6Mqbmho4OOPPyY8PBxBEFi0aNFZ
      bwRklxX3jn+jih6BOmm6f/x5kCF7XfjKs/GWrMN7cDWyrRZELWLiFHRjf446dS4qc8yZVrPf
      EQQBITjeP1Gc1u6wIjtb8NXt9Q8j1e3vvQGwWCzodDqeeuqpflX4VCAKEjNj2/cvCAvK7DLf
      93FXUxnUDEBmdAwXNUZRsKn9pqVHn/nNz49ExLN05uWB9E0GM/tzp2Or8+sdPWIIycPKO8kN
      jy4h1LcZAI02HOQbAz0CAMlz6lrZ5190xXFHwrnx+kTcHh8Gg3/O4s47O24reulV12K3O9Dp
      9IhtrpMXXrLglOl4lP3793P55ZdTUFBAVVUVXq/3rN/pTrLW4N71/8DVAqIOMW4M6tS5iEnT
      UUWknvUGrjtkryswnu89tAHcVlDrUQ+dhTp9AephsxF03ccwO5cR9MGoE6dC4lSgD3MAWq2W
      LVu2BMZKf/rTn3ZyA7Va6lm1ZgNen8TUWXOw1JWTlTWG/O1bSRgxjnBz+4Tl9uBM9rS10tUq
      NQ/0UA+LJgKH0d9dE9Q6uhqtU0GHsXyvWmZJ3FXU6f2TKslRw7i0x1d+ZvFpG2kNa1+DIYk9
      0zxaKxPSdg8EjYxdNPJBcruL6zjTCMa6DnQ+n+OYoaM+xyLtjKjWYFCfyOgIP3p1eV+YPXs2
      H330EYcPH2bu3LlnfeUPIEamYbprnX/Y49B6fIc34FrnDzIohCSiTp6OOmUOYsKkbicJzxZk
      rwtf6WY8B5bhO7wR2WlB0IeiGb7AP56fOBVBfbrX2A98em0ABEHg7rvvxmz2t4q7cpXzSjIX
      X7oQ2VHHis2F6NWtxIWbKK6xMWZyR2+VZFMVYW2tdEHo+UeXHZzJ1jh/RaIV1fyxizyyLHQY
      ytHojFTpY6kI8i8QM+r8XT+Ppx6nu97/v1cLxPVYj1OB7FV3aKUjqUjR2zt4JoWoPX0qW8JH
      pa99Enq43HneAGBD6Fjy4/yGwxxk5q4uc507FBcXM3XqVG655Ra+/vprfD7fObErmCBqUCdM
      Qp0wCWYvRmqpxFu6GW/JOjx7v8OT/4m/d5AwCfWw81APm40qNOlMq90jZGcz3oNr8B7eiPfQ
      Or+7pi4YTfp81BmXIiZMPKm75WCnV3fHZrPxm9/8BrPZzIIFC5g6dWqX+cLCo6guK2H52k0s
      vOqnrFv6BR989i133XM/4N+CUJIkJEkiXC0Rc7SVLki4XK7jgmXJuF0d3TBFUc0YTQEpwf4J
      DUGlw+W6saOcDE6Hr8NQzrDzhhGkXUaIyz9xanCPxuUay4XGNTjkgwAE66bg9aQfdz4Vsty+
      3kGS/Hp+G3sVjUa/F05yxDDmeryd5KRjdkyTJAmvp2PF7fF4KLGMwdnoD7ZmjkqnPn4Im+Pa
      1wzfJOkIljqW7XZ7OugEgFcbMByCz4jL5aLsQDo1u/0LU7RBQYxOlJhR0n598cnhVNmGYmv0
      r3XQeEPJdLmI11cjhPvviU4f1mmPXHkArf/oD1pbW6muriYhIYEDBw50udPduYAqOB5t1jVo
      s67xL3KqysN7cA2+0k241r6Ca+0rCKFJbcbgPMT4CQiaM+tiLPs8yC0VSE2lSE2HkSxlSA3F
      +Cp3+d01TTFoRlyGOr2tpa9U+j2mV3fq0KFDXHjhhZx//vm888473RqA5rpyVm3O54Ybb0Qt
      qjCGRXL9lMn8sHwNV186D1EUEUURSZKoKUuncY+/glKp1Zw3WYdLFGmvygW0Oi3HVj8+n5do
      nZq4o4ZDJaPT6ZBFsT1uvkCnbrzP5+OaqBp8Qf6WtCY0Dp1OR7IBfG0fvMYANp/mODmJJfHX
      UG/0e6gMi0nhEp2OamMiVT7/6l6TIRa1phnvcXKqY8ZZVSoVbn0oR4ztngZpuiA+TlNTEeV/
      FOPiRC401nP+8M2BPCGmmxGdao5dX6jVajr5Ixfr4tjaZjiCjEHcq9PhcoTS3ODv6ejcBjTH
      3xOvj+xhKeQa/WWF6oMYp9PhKx+Jc2db3mAj2tk67Mf2Snxn/xDJsUyaNImlS5fyz3/+k2uu
      uWbArG4/lQhqPerEqf4xYUBqKsVbugnvofV4Cj7Ds/NDf+9g6AzUSTNQp85BZY49JbrIkhfZ
      Wt1ewVvKkBoPIVlKkVuqQD6mcacPRYxIRTvpVtRp81HFjDpn5zNONb1eCbx69Wq2bNmCxWLh
      5Zdf5rHHHuu0DqC2ugqNWmLpku9JzcgiPCycuKHDGVZVy5FaC4nR7XEtnPagQAWl6iZeik/o
      6M0zxpTGWA53ymfRhlMfmBfQ9+tiMatYgkXt7zm0trknNrZsoNbin3hNCBrHkZj5/HBMCInZ
      2nCgpUM5h/Wx/POY1v2TajPXRVbhMPqNkjk0Hr0vCZ09KpBHLYlY6qPZs3Fu4Njk1M4eHaE6
      G2MDrfaeh50wePMJdfv3CDCLEcCNnfK0qoM6zB2MN2UQ0eMzDHz27dtHQ0MDDzzQ01mocw9V
      WDLasGS0427w9w6OZOM95B9ecR1cg2vNS6jChiKmzEE9bDZi/HiEXrjqyrKEbKtpr+CbSpGa
      SpHb0kjH9I41BlThqYgxo1GNuAxVaCKq8GEIIYmoDGGn4OoHJ70yAGlpabz00ksnzZeeNZn0
      rGN33hoKwPjps3tzugAyEs3qPYG0SzUcp92Ep218XyVqCQe2BWeyuq1y1YlqXu6qsC4oypuM
      rcY/7hmRmkbk8M55romswmc82nMYAsC1kdXYDf5jYWEJeFRWLMfo6WN6p3ISNVXcEPxVIB0i
      XojRIONr29RX0MmUVsVQeszQVdSkIDxuT8BQAki+zuPTvqZonDvnACCbDHBZpyxdktE4nOgy
      //l1pq49nnxyx7mDDPnsGCfuKUajkfXr13PkyBGioqK47bbbBnUoCEGtDwwDwdNITYfxHtqA
      99A6PLs+xLPjX6Axok6eiTh0Juqhs1GZY/yVvMOC1HgIubmsrUV/pK3CP9y+YhX8q1ZDElBF
      pKJOOR8hbCiq0CRUYckIxkilVX8aGJD93NzQKexM8n98oihypwAPJrW3DtzBEmW7h1OV61df
      1IgMvQgM3r2Euv1hjTWiHripR+ezWcJp9g/lY4jqecs5ySC1Dx3pZHS6jhO1No2HpuNkTMet
      MtYKsHvnVFrr/dtlhqWkwmn2UHPYzAHjovd07YGj86o7zB1EJ5xbbnTJycm89NJLuFwutFrt
      oK78u0IVNhRt2FC0E25C9jrxHtqIr2wL3pK1eItX4EJACElAdjSB23aMoBpVSAJCaBKapGmo
      QhJRhSWjCk1CMMcplfwZptcGoL6+nt///vdERUUhCAIPPfRQv4eCsGjCKQ3yL3pS9+JDnBXq
      Y9JRQ9GLgEg9oWjXFGy1QwGITEtn9HB/nB9b3bDAsWFTOi4gUwX37PZamyKwNvj11UYGYzy3
      6tazgsLCQjZt2oRer8fn852xMOdnA4JajyZ9Ppr0+TDvOXwNB/EeXINUt9cfGC081d+yDxuK
      EBynTMoOYPr0ZKZNm8ZPf/rT/tYlgNdnxemuAkAjip3cOUV13/3Ei/OmYD063JOSSlYXwz1d
      YbWE09Lgb60YokM6HTPGhNDcEN3B62h4rAmo6bOuCqcPm81GcnIyZWVlNDQ0nGl1zirEiFTE
      iNQzrYZCH+jTQrA9e/ZQUlKCIAg8+OCD/d4DGKvfTXTbOLmg0iJLt3SoWIdMSwY676tadTid
      Izn+iVJRo2F6VqcsWC1hNDf4h2D0Uadmk4UT0dwQze5jJ3NT+m/TGoW+M3XqVDZv3ozRaOSi
      iy5SWv8Kg4Jev+Umk4m0tDTcbrc/3sQpGMOL1MiYAmsDeu6P7Ww1BcayRc3A/IA9Ll2HyVxf
      F5O5CqeX6upq/vKXvyDLMg899BCxsb1zdSzIzaba4uD882ahVfufp+TzkF+wh9FZWaiV3cAU
      Bii9fjPLysoICgrCbDZjMBjwePq2IlVBYaCwc+dOfvGLX3DHHXeQk5PTK9m68iLKGr2MHhbN
      2k07Asc3rV9NTu5O3N5za8GcwrlFr5vJUVFR6HQ66urqOHDgAJdc0v9b31nqYqnZNxoAlagh
      ZFy/n0JBIYBareb9999HEARaWlooLS3l7rvv7pEnUF1VFSNGjyEuxkTenpWB47PnXITd/l0g
      7fV6kWUZr9e/VLDjancFhTNDrw2Ax+MhODiY22677YT5ji6l78sQkaUulrL9/gF8lVpkdK9L
      UFDoOQsWLGDBgr5FHNXqtDidLiSfFo/cvcE4Oqfg8XjQarXKHIPCgKDXQ0BGo5Fly5aRn5/P
      wYMHu9wT2NHSwL///T4fvP8+lQ0trF+/FlmWWfbtlzRaB9auVQoKP4bE1Exy1/3Al59/SWpm
      Jju2bMbucrNpzUr2FxWxYvlKWl3KMKnCwKTXzRCv18uYMWMoLi5GEASSk5M7dZX3Fe5izqVX
      E2twsWpzHmrByf68reij0zqEglZQGIi8+eab/PKXv+xRNFBdUAg/v+EGvD4JvV4Hqf7oqjPn
      zGfmnPmnWlUFhR9FrwxAQUEBTU1NXH311SfM53I4MAYZ0Oi0aCQXrS31rNxfzE233nFCOQWF
      gcC9997bq/xqjYYTbnGgoDBA6ZUB8Pl8fPTRR6xbtw7wj+8/8cQTndYBREVHcbDoEO4gJ+rQ
      aIyih0UXX8JnX33FjTf8DFFZ/a0wwNizZw8ffPABYWFhlJaWkpqaygMPPKCM1Suc0/T67b72
      2muZO3fuCfOkjJ5ExepVFNSomDdvHmWlRozBEcyfNYmaegvxZ2ABloLCibBYLFxxxRVMmTKF
      N998k+joaGw2G6GhyruqcO7SKwOQkZHRI/c1QRA5b96FgXRqShoA8cnKcnGFgcnEiRN55513
      WLNmDRdccAEej4egoMG3ibrC4EKQz8DWR0d3BJNlmZK9xbiPegYJApHDYmhttOKwtAaORSRH
      03C4PaaOLtiALMsBOUElEDE0htYGK47m1sCx8KQoGg7XtsuFGPE5PXjbvDK0Rh3BsWFYKho6
      HNOZDVhrLAE5Q5QZd4sDn8vvw60N0hEcE0ZTeT0+d/sxnakLuWbHMXn06Ez6DnlCEyKw1jYH
      8miMOkSdiLPJfkyeSHxuL9ZaS4dj1lpLBzmVTsTVJqcSVYQnR2Orb8bZ4vAfU6sIiY+gqayu
      /Z6EGpE9PtytRzflEQlPisJa14zL6ggcC4kP7yQ3bHjKObF3Lvg3O1q1ahVz585l2LBhpyxK
      pd1uV9xAFQYMZ8QAHEWSJOx2OyZTezwcj8fTYU7haI/jWI+M5uZmRFHstZzVag3sZQwEFuYc
      K3d8OQCVlZXEx8efFjmPx0NTUxPR0dHd5umunJPJeb1eVCpVB6+thoYGgoKC0Ov1vZKrr6/H
      bDaj0507G23X19ezatUqcnJyePnll/s9xhUoBkBhYDHg3sLjP7qebszdFzlBEDrJ9eSjP91y
      x+fpqpyeyPW00umr3NlMZWUlH374IXq9np/97Gdn7TVvPrSeqpbKLn8LNYQxb/hFp1kjhYHM
      2fmWKyj0MxERESxevBibzUZBQQGyLJ+Vm5VsPrSB3PLtXf42LCJVMQCDGLu7ldv/23G71wFv
      AOrq6pAkiZiYmJPmlWWZvLw8nE4n6enpRET0bNdah8NBeXk56enplJSUEBUV1WGoqCfs27eP
      1NTUXg8bFBYWMnp0z4JdFBcXU1tbS0JCAomJiT2qoGRZprCwkKysLKxWK3V1daSkpPRKx4qK
      CoxGI2Fh5+ZerA0NDSxfvpzS0lKKiop44IEHzsrK/3Tzu5Uvkl+5s8vf0qMyePGS359mjRR6
      y4A3AFFRUSfP1IYgCIwbN47m5ma+//574uPjGTlyZIdx8eORJImdO3dSXV1NQ0MDPp+P5OTk
      Xus5YsSIXssAPa78wb8nc2JiIitWrGD37t0MHz6c1NQTe1bt3buX3bt309raGljF3VuGDBnS
      a5mziezsbA4cOMD111/PDz/8wNixY8+0SgoKp4UBbwB62wPIzc1FpVJx3XXXIYoiR44cOaGM
      SqVi6tSp2Gw2DAYDra2tPZ53OJbT0QM4cOAAjY2NzJs3D4PBQGlp6UllMjMziYuLIyQkhIaG
      hl73bODc7wFccsklTJs2jQ0bNlBfX8+7777LokWLlH2BFc55BqQBkGU5EGQuPDy8xx+iIAjE
      x8dTWlpKTk4OmZmZJCUlnVTu6BBQc3MzgiAwduxYjMaebTtpt9ux2WwkJCT0uPI/6gIL/gq6
      p8TGxtLY2EheXh6JiYk96qnIsszBgwfRarVIkoTD4ejRPQG/N1BNTQ3h4eEdvITORcLC/j97
      5x0e1XUt+t850zSj0cxIo16QQJ0qigQy3dgGm+aO7TQnse9LnFwnTmLH12l2cpN749zEN4mT
      vCR+dpziHtcYMMVgehMgQBJCAqHeNSNN0fTz/hgQyCA0AtTP7/v8WafsMWap0AAAIABJREFU
      s9cMZ/bae+1VIlmzZg1r1qzB6/XKJiCZccGIVAAA5eXlOBwOOjo6yM7OJi0trd82kiRRU1OD
      VqslISGBrq4ujEZjv+1EUaShoYHIyEjUanXIP3673U5xcTFKpRKdTkdmZmZIA6XVauX06dNA
      0PUw1JoKZWVlhIeHk56eTlVVVcimma6uLhQKBdnZ2bjd7pDa+P1+9u7diyAIKJVK2tvbSUlJ
      CantaGegq7jLVQTraG5g78EjzCwoJDE2ajDElJG5ZkakAhAEgcmTJwPgdrspLS0NSQFA8Mer
      UCior69Hq9WG1Ean07FkyRKUSiUejydk33a/398TLdrZ2RlSGwiuaqKigoPCvn37Qm6nUqmI
      ioqirKws5IIioiiyaNEiRFG8JHbgSkiShFKpRKvVYrVa5ajYPjhfEWxWerAi2C2LC0AKsHnL
      NlbdcTvvv/8B9967DoUoryhkRh4jUgFIktSzcQmEvHEpCAKzZs1CkqRLgr6uhM/no6goWM6v
      rq6O22+/PSQ/cIPBQGxsLDU1NSHP/iHodVJZWQlwxQ3qTzNr1qyefkMdkM97AblcLlpbW5k7
      d25IfSoUCiZPnkx5eTlGo5Hk5OSQ5RxPXK4imOTrRmdKJFwXTlyMGbfXj04zIn9qMsOM2+fm
      i6+s6/P6A7O/wKopdwxa/yP2rbTZbBQWFoZ8v8/n4+WXXyYrK6tn8M7NzQ0pmZdSqWTevHlA
      cKPVZrOFtOHp8/morq5GoVAMKCK2ra2NjIyMkN1UAd544w2io6N7VjUpKSkhDcrnPaMgaApq
      aGgIWelUVVUBjHn7/7Vw2YpgCiWBgAcAr8eNIM/+RxUljcc42VJ62WsCAnfO6HvAHm2MWAXg
      drvZsGEDZrOZrKysfgdypVLJvffey6lTpwgEAkRGRmIwGELq6+IVgCiKZGRkhNROpVIxb948
      6urq2LRpE2vWrAlpsDSbzaxfv56srCwMBkNIG8Fr166lvLwct9uNTqcLySsKgiuAY8eO4XK5
      CAQCPcqgPwRBYObMmbS3t7Nz507mzp1LQkJCSG3HEynpubzx1rucDFOSO2cRRXv3kDsrnzDB
      wfoN63H61ISpBu5VJjN8lDQd593jb172mkJQyApgsBEEgcWLF+NyuVCr1SG7ZUZERJCXl0dF
      RQXV1dU9JppQOB/56fV6OXXqVEh+/V6vl4MHD5KSksI999wT8uZxdHQ0999/P16vN+R9Co1G
      w7Rp06ipqaGmpoaqqiqysrJCanve40iSJMrLy5k2bVq/3+l5l1q9Xs+aNWtkl8g+6Ksi2PKV
      d+BwOtHpdMjz/2un1d7CjtMf93l9UfpSYvShTYpkLjAiFYAkSezcuRODwYDFYmHmzJn9rgD8
      fj+7du1CqVSSlZXFpEmTQs7n4nA4MJvNZGZmUlRUhFqtpqWlpV/lcd77p7a2FqvVyrRp00Lq
      r7a2lrNnz6LVahFFsce2fyUOHTpEd3c3qampFBQUhPzZzruczp07l/LycvR6PeXl5T2b7H0h
      CAJGo5GWlhY6OzuZPXt2v0ojEAj07NuMR7xezyXn7HZ7r2O3243H47mqWJNQMCkiSdZd3j04
      WhWLzWa7bn1FKqP67MusirmufTV3NLG/Ym+f17NMuYRJoblu90eYpOvzcykE8bp+Lq/f22df
      AGq/5rr15/K6LulrxCoAvV5PXl4eHo+HsrKyfhXA+QErEAhQW1tLbW0tGRkZIZmBdDod1dXV
      qFQqrFYrUVFRIc3mW1tbCQ8PJy8vjxMnTtDZ2RmS26nVamXu3Lmo1WoOHTrU7/0QXN2Iokhb
      WxttbW0kJiYSHx/fbztRFOnq6qKqqoq6urqQN9Q9Hg8Wi4UbbriBtrY2Kisryc7O7revqwk0
      G08oFIpBzQb60OJHBuW5l+P/LPn3IetrasR0nk399ZD0tWbWHayZNXgbr5/m2buH5nNFEHFJ
      XyNOATgcDkpKSnC5XBw4cIBAIEBmZma/7URRDNm+/WlUKhWLFi2ira2NJUuWIElSSDM0o9HI
      8ePH8Xg8tLS09DtAQtCX3263c/DgQVQqVcgmoFCefTkEQWDhwoU0NTUxf/581Gp1SJvPSqWS
      7u5uTpw4QXt7+1WlkJCRkRnZjDgFEB4eTkFBAfX19Zw+fZopU6YMes55n8/H4cOHgWBemFWr
      VoW0AtBoNCxdupSuri5yc3NDspPn5ubi9Xo5cuQIsbGxg25bv3gT+MiRI8ybNy8kBSCKIgsX
      LqSrq4ucnJxRmx5ZRkamb0bkrzoQCFBfX4/RaCQiIoLS0tKrnt2HwqfdQEOpBdvZ2UlpadBV
      zO/3c/LkST7/+c+HVCHrxIkTTJkyhbNnz+J0OkNOzXA1fNoNtLGxsV8F4PV6OXz4cE86jpMn
      T3LbbbeF7HkkM3y8fvhvnGotv+y1BEMiDxUOnYlIZuQzIhXA+dl3ZWUlFouFKVOmDGp/F7uB
      BgKBfjNsQtD8M2/ePEpKSujq6uL+++8PuTxifHw8RUVFtLe396oYNhhcvAIINRuoSqWioKCA
      6upq6urqWLVq1YCyssoMH7XWGsqaT1z2msvXPcTSyIx0RpwCOB/Fm5+fT3Z2NgaDYdATcymV
      SgoKCmhtbeXMmTOEUiWzo6ODXbt2MXnyZBITE3v88/uTtbOzk4SEBAwGAyqVatBr6p5Pbmez
      2SgrKwvps3k8HjZv3kxSUlKPt5DP55PNQDIyY4wR59zt9/upqKgAggnhBnvwt9vt7Nu3j717
      97J7927y8/NDGujCwsLIyckhEAjQ1tZGR0dHSINreXlweV5ZWdljYhksfD4fhw4dYs+ePWze
      vJnc3NyQvKJEUSQrKwudTtfjdeTz+QZV1uHGYrH05HOqqakZ0L+Ntb2Fs7X1XPzP77R3UVFR
      idMVWvI9GZnhYERO6Wpra1EoFFRXV6NWq5k0aVLIUb0Dpbu7m0AggFarxWw2h+yfrdPpQg7E
      uhiXy8XRo0c5e/YsHo+HyMjIkCOPB4rf78flcqHRaIiOjg45EZxSqQzJ82qs4Ha72bp1a08M
      yTvvvMPjjz8e0urMbmnmw807SYkOp7nDztwZ2YDE0aLDmKJj+Oebb3H/Zx5AKaeDkBmBjDgF
      oFAouOWWW5AkqWcQGsxcNDExMcTExOByuSgtLWXfvn3MmTNn0Mwd8+bNw+v19ny2wQoIgqCX
      0oIFC/D5fJw6dYqioiKmT58u++p/ivNuvAqFAqVSyT333BOyaa6+qoI5C5aSlahn/fptMCMb
      EJg+M4/KykrCI4wIQnA1JklSz0oq1GyuA+VKKxcpIIWcDlxmfDDiFIAgCCEXY7mehIWFhRSR
      e62o1epBt/t/GqVS2W/k73gmIiKCz372s7z33nu0tLTQ3d1NRkZGSC66UkBCIQoIiAjSxeeD
      Edhurxe/X0J9bkLh9XoHNRDsSjILojDoLtUyo4thVQCiKKLX6wfcLpRo28txtTPfq/XUuZp2
      KpVqQCmir7XdQDKSXkx0dPRVtRupHD58mISEBPLy8hBFMeS9p4S0SXz0yS7siQYi4pOpqjhF
      QkoSpRVnSEpI4ERpOb5AAPXI226TkRl5KwAZmeEgMTGRl156qSeJ4F133RWSEjBGJ7Fwro8O
      m5v5OZlY2tpQqrRMSIiltaODW1euRqeWf2YyIxP5zZSRASZOnMh3vvMdgAGtAAASklM5nyjb
      fC5eIiF5AgnJgxfgJyNzPZAVgIwM0NDQwBtvvAEEI6afeeYZuTC8zJhHVgAyMkBqaiqPP/44
      AL///e/x+XxDvlkvIzPUyApARgY4e/Ysr7/+OhDc4JajnmXGA7JrgowMMGHCBHJyclCpVCxY
      sECugCYzLpCnOTIywJ49e9DpdDzyyCM8//zzpKWlyT7z/fBK0V843VZ52WvJphS+OPf/DLFE
      MgNFVgAyMkBUVBRbtmwhLCwMr9c7qBHaY4UaS3WfmUd9Ae8QSyNzNcgKQEYGyMzM7Cm5+eCD
      D8p7ADLjAtnQKSND0ATk8/lYsGAB//rXv/B4Li3wLiMz1rjiNMfltHGo6Ah+SSB36nRio64u
      BcNgUHZ4N1JkKpMnJtNcVwNaI3HmgconUVFWRlJ6Njp1f0t+idPlZVjt3ahUGjKystCFqXuu
      VZSVkZyejbbf51w79s4OjhQfRxJVTJ0+nShD3+k0juz9GGPqNCYlygVdrkRGRgYvvfQSx48f
      x+l0yisAmXFBnysAe0cT//a1R6ltbKW1qY5nvvstKlucQynbFak9c4q65jYAGqorqG1uB+Do
      /m1sP1Qa8nNKig/hcIeW6/7FX/+Sg0eOsmvnNh75ty/z1odbe64dP3oIh2dwMjxeTGttJV/7
      1ndpbLXQWHOap554gqauvjM8VpWX0GzpHHS5RjsJCQk88sgjZGZm8pnPfEb2ApIZF/Q5zSk7
      fogblt3D/ffeBsBd99x3ruCFxJlTpRw8cpxJ2dPJzwtmmWxvbqT4RAm+gMCsOQVER0aAJHG6
      opTyympi4pOZlTcNhSjgdXez/eOP6er2smDRYuKiI/F222hot+HsaKKsooopM/PJnjSBgN/L
      sSNHaGxpJzYplVkzJvPp+MzUrFzQGLC0N3OoqIhOMZZwyU5ichrW9namTM0FghkaT546RW5O
      zrmWAjPnFmLSqZECfs5UVRGmFCk6UkxM8kQK5/SuQ6xU6/n8F7+MTgEPfdnOY1//BjPy8shM
      MjN7biFGXTDffktDHcdLywigYE7BXCIN4bgcnbR0dFFdWU67zcWSpTdiitCdu7+GnXv2Y4pN
      ZsmCeShEgarTp0iZmMnZU6WgNZKRmgzAkaK93Hbnl7h3ZSEA997/WQB8Xg/FRw7T0m4hccIk
      pk/JvuR7Cvi97Nn5CY3tXdywYDFJcWaQJMpKiqmqaSQxJY3pU3MQx2EEbFFREZIksWXLFlQq
      FY899pi8CpAZ8/Q5zZk4KYutH/6dbbsO4PMHEAQBURQoPbid5/74N7Kzc9n8+gt8sO0gkhTg
      rbdfx+UDvA4e+8Y36fZJVB7fyy9/9zIRBgMlRTspqahBCvj40ZOP0Wz3EWMK57vf+Q4NHXbs
      LdV85StfZduBE8TEmPnZD36AwydRcnQ/+4+XYzAa2PD6C7z24fZLZD30yUaKyk7jctppa+3A
      0tZCXW0djm43L//f56hs6ACgraaMP//9nV5tX3vp/2J1+wn4PPzwu4/x8uvvEhkdw1sv/Y7i
      ivo+vzh1mJ7771zO7r2HAXj1L3+gy+1H8nt5459v4pUUeB0dfOvbT+D2S3TUlvPIo4/T4fSj
      lrr55je/jcPjp72+kh/8+KckpaZTe2wPv33h1XPP+7/8/YU/8PsXXqHL5ujpNzMzh/fe+DN7
      DhbjD0gIgoAgCBw5uJPi8ioMERG8+eLz/Gv7wU9JLPGnX/2EE9XtpCXF8eP/eJJmq4NDn6zn
      xVc/IMKgZ9/2j6hubL/S+zJm0Wg0bNmyhWnTphEZGRlSdTcZmdFOn1Oc6JQsfv3fP+H1N17j
      j799jptuv48v37+G999+n8ef+ikTzDpy05/ku0//ntVL8/m3rzxKQ10tlk4bafFh1LV302Xt
      IDI+kRkzZ7NwwQIAWk4fRoybxmfvWQtAmM/Ghxt3cPf8CSxcsZpHHvo8APs//gC728+02QvI
      yJnO2Zo6bll+E+/uK+X+lUsuK3NCSjqF82bSJk7gjpvnArDurlX88531fPdrn2Xzpo9Ycdvq
      Pr+MlOwpPPXEtwCw1ZXR3mkBkvq8P84cxfHWrl7nBIWKr33tUerqaunsiiXWsI3WLjcisGzV
      atauXA5AW+1pjpVXUX/gQ9Z96VHm5U+hYOYUHnv0u3ilB3DZumj2GPifXzzCxcWkJk7J52ff
      0/L6m2/y2189y9r7H2TdmpvJv2EZk6dZqalt4KabFrOn5CSrl+T3tHPb2jnV7OOXj69DAOxN
      VezYfRSTr4PopBRmzS5g4YKFfX7Wsc706dOJiYkhLi6O1tbWkKunyciMZq64xk1MTeexx7+H
      z+Pip099m925uVjaLfzx18+iEgEpQExiAn6vkye++U0m5M4mOSEai9WBFAgwa8EKmtv/yX/+
      6Hs4PfDYk08RaO8kPi6hp4+4mBic1Y0AvWdd5/7ctfFtXtu4hxvm5oPLQiAwsJlZ3oJb+PM/
      vkan4y4OFJ/mv7/Ud2GUgU76TlVVExWb3euc22nlu99+gozp+STERtHZ1Y3UI/OFDsyx0Thd
      bqwdnex49S/sWB8OSKgjDAQkCIsw8PCX7+dylQTTsqby3e9Nxe208f3vPMaUqVNoPLKV9ftK
      mTt7Ji5rI1LA1FsuVze1p8p45umnAejudnDjbdksLbwH+ztv8sOnnsAv6njiqf8g0Tw45TdH
      Klu3biUqKopNmzYBYDKZePjhh+V9AJkxT58KoLWxFr05Aa1aiVKtISdrEt3d3SQlxzPv7i9R
      MDmY6tZmt9NeVUpkVgHf+PpDSJJExbG9ALg8Pm67Yx233bGOEzs38uGHH/Pg6tmUvLYViTsR
      gCMnSkhImNqngNs+3sYPf/ocseFKmquOc+y1HVf+RIKAx33BhU+hCuPWxfn88bfPEz+5kDDl
      9flRN9ef4a31u/jF85/pdb6+vJjU2Uv5+kP3IwUCHCvac7FwwDlb/O7DfHnh3biTEtBmL+Qz
      a5YCwSL1arHX7b1oaqghMjYJjVKBRqcnPTURt8fDzj37efqnv8YUpuD08b28tv1Ur3ZavZGY
      hCSeeOr76NRKpIAfR7cHbwDuWPc57lj3OXa+9ypbtx/gc3fddF2+o9HCsmXLsFgsFBQUEB0d
      zdSpU+VMoDLjgj4VgLWllm8/8RQpaen4XZ34NSb+80vTyJsQzne/9wO25k7F1tFMUlY+//bA
      CqqLfsOv/tdBc10VdY1N3C0KHNu1mb9+sI3sjDRKjx3joW88RUTcRObnRvPYt58iKVrLmdZu
      fvnfD+NuLOs93gkiggCz82fz4//4D1LiI+iwWlBEXShWfrmf6LSps/nzEz+ktmwvBQtXsGTe
      dG5Zcwe/v/NefvXiW1f8Mnr3L1yyGepxWfjWv38NUQigUOn4zg+eJtrQu15x/MRcTvzqRZ6z
      N9NYd5a65raewWTbh+/haquj4WwFeUvWMinBROLau/ned/+D8qO7Eb3deFVmfvLDb/UpY0NV
      GU88+QNSJ6XTbW0lImESMzJTqZqSyzPf/wGxRjVtlnbM6fm92qm0Bu5es5CvP/J1JuekU1td
      xQMPfZuuM/v5166jpKcmUXL8BI899eMrfkdjkZaWFn75y1+yYsUKjh49yoEDB/jyl7883GLJ
      yAw6gnSF3S5JknA47IgKFTpt2EXnA3R1daEJCydME7SV+n1eWlrbiI6JRaW84Avv9bhpa+8g
      yhyNRn3erirRabXg6PaREB/LlSdbElZLB5KoJtIYWklHr8eNzd6NKdKIKAh0d7bwxDO/4Te/
      +s/LKo3rjc/rprXNQkxsLEpFcDrfcPIAr++u4KF7VqMK0xKmvmBjliQJh92GoFATrgvr67EX
      3R/AbrejVGnQhp3PVyNhaW9DVGsxRvQdF+DzerA7uokwGFCcsy95XN20Wzoxx0T31K4dT6xf
      v57U1FSmTJkCwK9+9Su++c1vhlYT2O/jow0fYuv2ceMtt2I26gCJg7s/oaHNis5gZtmSBT2T
      CafTOag1gf/n459yuO7TDgBBJprT+enKX163vv57yzMcazhy2WuZMdk8c+vPr1tfMoPDFd9C
      QRDQ6y8ddAVBxGjsbWNWKFUkJCRccq9KrbnMeQGjKYpPPaIvKTBFDqxurUqtISoqODDu3foh
      L73+Ll/82neGZPAHUKo0JCTEX+aKRIThUvu6IAjoI0K3uwuCSMQl9wtEmvsP9lKq1JhMvfPc
      q8O0JCRoQ+5/rKFSqXjllVfQ6YJuuZ2dnSF7AdWdLsGYnMuiiSa27j3A6hVLAEiZmEv+/Dje
      e+dN3L4AWpWcW0hm5DHmp3tzl65g7tJbh31DLzGngMdyCoZVBpnLc/PNN3PzzTdfVdsui4XY
      tFR0RgNhkuvcWYGYmEg+ev8dTImZhKkU+Hw+JEnC5wsGHfr9gxM0GAgE+rwmBSTc7r6DBkdy
      XzKDw5hXAKIoz7xkBg+90UBrmwWPXqJburCy2vCvd5hcsIRJSXEAPSYfr9c7qCagK010BFG4
      rimuh7IvmcFB9nOTkQEOHDjA0aNHAfjjH/8Y8uw1JWMK9ScP8u4HGymYO5uivXtwurqx2z2U
      HD7A+k1b8fr7ninLyAwnY34FICPTH+3t7bzxxhuIosjmzZtJSUkJuR6wqNSw9q57e47jC28A
      4L7PfW5QZJWRuVr8AT/lLWW9zskKQGbQcDochOl0iIDD2Y1KISKq1CgVIk6HA114OD6vm7r6
      BqKi4zDodUhSgIb6elRh4cRER+HqdqIJ09Jl6cDj8yOISqLNUXRZ27HaXSQnJfZ4M10tZrOZ
      H/7wh9TX16PRaOQcQDJjErfPxX9u+n6vcyPWBCRJ0hU3mWRGPkcO7MLplQAvO3bs58zxwzS0
      BzOTbt+9G7ezi1dffY1Om52igwfxBQK8/9Zr1Da2Un6iGIvNSdG+HXT7JLZt/YiGhgaaW5pp
      b6xiw9a9dLQ0UF559rrIeuzYMdavX8/hw4cpKSmRcwHJjAtG9FRH/hGObqSAj9rqs4Qp/Hj9
      gXPxHsHZuoBA9ckTzFm0nBgdmIyRuDvb0JonMDV7Ei3tFsLD1OfuBIVSidFoRB2mQyG6cLvs
      xCYVkBQfe11kjY2NJSkpiZkzZ6JSqeRIYJlxwYhdAciMfiQJXC4XLpcLSZKQpAuug5IUwO8P
      oFAEXSQP7tmFNxBAFBUEAgEqig/T0nkhC2pACroVdjtdmOJSuXvNCsqLD7J11+HrIqvJZEKl
      UnH06FFKS0vlyYfMuEBWADKDhqhUkpmdQ25uNhqVEnN8NIcOHKL6zCkcDg+p2Tns3raZbrcP
      AgF0pmha6iqpa+64bBK8YOprifaGak6eqSMxKRGXq/u6yKrT6WhubgaCrpryCkBmPCArAJlB
      Y1pePlqlACgpKMgjJiWLwrxMOmwuVq1cgc4QzT1rb8XpdDD/puWoFUruvfcexICH9Bn5JJkN
      TMvLR6MQKMgPpvcWBJGo+GQi9WpQ6Vl+Y+F1kXX37t0sX74cv99PU1OTXBNYZlwwovcAZEY3
      BlPUub8EoqKCeT+SJkwkacKFe/TGSKYYI3uOleowcnIvpOw2RgafkZiS1uvZkzKyrqus+fn5
      vPTSS5w5c4aCgoKQ3UBlZEYzsgKQkQHcbjd33303qamp7N+/f7jFkRknBKQAJ5v7rmEeFxGH
      Obz/HF9Xi6wAZGSA8vJyDAYDqampHDp0iJkzZ8qrAJlBx+v3XuKbfzEPzP4Cq6bcMWj9y3sA
      MjJAYWEhu3bt4mc/+xk5OTny4C8zLpBXAEOI2+Nj5/Ea7E4P8yYnE2/uO2+/zNBy9uxZ8vLy
      WLRo0XCLIiMzZMgKYIjw+vw8/ZdPKD3bCsBrH5/gZw8vY1JiZD8tZYYCo9HIb3/7W1paWjAa
      jSxbtmzYU4jLyAw28hs+RJysae8Z/AG63T427q8cRolkLsZgMPDoo48yffp0MjIy5DgAmXGB
      vAKQkQGsVivvvvsukZGRKJVKvvCFL8hKQGbMI68AhoicCWYmp11w59JqlKyYmzGMEslcTGlp
      KWvXrsVoNGK323sqd8nIjGXkFcAQoVIqePqLi9l1rAabvAk84li4cCF///vfqa6uZsmSJbIX
      kMy4QFYAQ4hGpWTZ7EnDLYbMp3A4HPzhD38gEAjw5JNP9hSHDxVrewtWp5fU5CQuthp1dXWi
      jzAgyqYkmRGKbAKSGffs3buXZcuWsWLFCnbv3j2gtnZLMx9u3kFN+TEOHCvvOb/z4/X86YWX
      cXkGp/i7jMz1QF4BDAC318euYzV0OT3Mm5xEgjliuEWSuQ44nU6Ki4sRRZGGhgY6Ozu58847
      Q3IDra+qYM6CpWQl6lm/fhvMyAZgwdJbcXZ/2HOfz+dDkqSevQW/f3AUw5WKKEkBKeRaxyOt
      r7GKx3/lpIM+n/+6fY8e76V9yQogRHz+AD/+yyecqDrnx7/1BD97+EbSk6L6aSkz0lm2bBmz
      Z8/uOVYqlSF7AEkBCYUoICAiXFRC4NPtz5eZ9Hq9qNXqQSs7eSWlJYgCGo1mVPY1ZunH10Cp
      VFy379EvXNqZbAIKkVO17T2DP4DL42OD7Mc/JggPDycpKannv7i4uJAVQELaJI7s3cWR/buJ
      iE+mquIUbq+P2uoq2js6OFNVhccnm4FkRibyCkBG5lNs3rw55EhgY3QSC+f66LC5mZ+TiaWt
      DYUoEPD7mTN3HpIknCtqKXMtODwOqjuq+ryeGpVGuFr2qhsosgIIkawUM1MnxvSsArRqJbcO
      ox+/zenm+bcPUnSqgURzBI/cnk9OavSwyTOWSE1NHVAQWEJyKgnn/jbHBGM9UifJMR7XkxrL
      2Stmzfz+LT9hcvy0IZRobCArgBBRKkR++ODiEbMJ/NePitlXWgdAdXMn//P6Hp7/5m2EqXv/
      k/p8vkGzN48lamtrefnll1Gr1XR3d5Obm8s999wjRwOPQ1pszbQ5Wi97TQBy46cOrUCDiDwy
      DIDh9OO/eMafYI7AanP1ut7W6aTD1k2iOYLGxkZ27NiBw+HA6/USFxfHsmXLiIiQvZb6oqam
      hjVr1jBt2jReeOEF3G43XV1dGI3G4RZNZojZXrmFd4+/edlrCkHB3z73zyGWaPCQFcAo4a8f
      HeuZ8dc0d15yPdqoIypCS1lZGfv27SM3N5f4+HjUajWHDh3i7bffZvHixaSlpQ2x5KOD3Nxc
      nnvuOdavX09aWhpKpVKOBpYZ8wyLApCkAEX79zNjbiEtDXUkJSXTVFeN1hSHUR82HCKNeCrq
      2i85lzMhmtMNHef2AOZQfKSI48ePs3DhQrKzs3vuW7VqFUVFRWz0clH1AAAgAElEQVTZsoWV
      K1eSkJBwybPGO263m9tvv53p06ejUqmGWxwZmSFhWNxAS4v2sO/AUbwBKCk9jstuYcsnB9CH
      y4N/X2Qmm3sdRxt1PPOlJbz143v5zTduRent5Pjx49xyyy29Bn8I+mvPmTOHzMxMtm/fjtfr
      HULJRweRkZF0dHTwu9/9jhdffFFOBiczLhjyFYDL1sHJui5mZqcB4LS289dX3+Tu+z6HQghG
      SAYCASRJIhAIyD/Ec9y3NIdOezeHK5pIMEfw8MoZCJIft9tPW1sbH3/8MXl5ecTFxfUZOThr
      1izOnDnD4cOHycvLu2aZRFEcM7Nlr9eL1WrF5/OhUqnkzV+ZccGQK4AD+3YhKNSUVVagiC1F
      a4wiPymBsoqzzJ+Vi0KhQKFQ9CgAhUIx1CKOSDQaDU997tJyhW63m+3bt5ORkcGcOXOu6Luu
      0WiYM2cOxcXFzJo1a8wM3tcDl8tFXl4ed999NxaLRa4GJjMuGPK3fNHNa7hz9QpyMzKYMWMy
      oiCSV3gj1qpi6lqsQy3OqEaSJA4cOIBCoWDhwoUhDVpZWVkEAgEqK+Uo5vNIkoTFYuGTTz7h
      G9/4Bhs3bkSSpP4bysiMcobNC2j+8lsBuPnmFQCsvOu+4RJl1NLY2Eh5eTnLly8PeTav0WjI
      zMykrKyMnJwc2dQBvP322xQXF/PII4/gdDp54IEHhlskGZkhQV7njlK8Xi+7du0iIyODlJSU
      S64HAhIHyup5a3spJ2vael3Lycmhvb2dtra2S9qNR2677TaWLl3Kq6++yvHjx9m+fbu8ApAZ
      F8hxAKOU4uJiPB4P8+bNu+SaJEm8tOEo7+8O5qcXBHj0rrncOGsiACaTCbPZzOnTp4mJibmk
      /XhDq9WydOlSli5dis/n49SpU0iSJK+OZMY88gpgFGK32zl27Bj5+fmEhV3qOuvo9rLp4Ome
      Y0mCd3ae7DkWBIH09HTOnj17xZzu4xGlUsnkyZMHtAlsbW/hbG09Fy8afF43p06dwuUZ+15s
      GilAis/NVI+DFJ+bsICc/XS0IK8ARhmSJLF//34iIyPJzMy86uekpqZy4MABOjo6iI6Wk8hd
      LcGKYDtJiQ6nucPO3BnZgMS/3v4naTmTeee991l3952Io3wxEXB2IHXWEbDWBP/rquPe6r18
      ztlBhOS/JN9pt60Bx6v3IxqSECNTEY3JCMaU4P/1oafblhlcZAUwymhubqaqqoqVK1f2OUsN
      16q4JT+9lwnojoU5ve4xGAwYjUZqa2tlBXANXK4imOTvRgyPJW9GHq3Njbi8fnTqke3OLEkB
      JKeFgPUs0vlBvrOOgLWWgLUG3F0X3S0g6GNxBvycVIfTolDRKqqwikpMAR+xAS9pKh35aj3+
      5hP4KjaDdNGqQKE+pxCSEY3JiKYJCIYkRFMKojEFQSkXkhkqZAUwgtl5rIa/bDiKvdvDstkT
      eXDFDPbt28fEiROvmM5BEAS+eGse0ybFUtPcydRJseRM6D3Ii6JIcnIyNTU1zJw5c7A/ypjl
      shXBJEAIKmdREILHIwBRkgh0NZwb2GsIWKqDg31nLYHOWvB2X3SzEiEiHjEyDVXcZMTINERT
      anCgjpyAoFDzry3PcKzhyGX7yozJZvGtPwdACviQbE0XKZWa4Gqisw5vfRF4HBe1FBDCoxEj
      z/VlmoBoSETp9xIR8GETFMEZzXVAkiTwe0AKgN+LdO5vrauTeL8HUZIQAaUkoUBCAagFAd/Z
      XeBzIwX8QcXm9wT/DnjB7w3aXP3nrgd8wevn+uBcG8nvAb+XgN/LV2yNCBKokBCQ8CPgEkRc
      gsjE8o24uxoR1DpQRyCodQgqHYImAtQ6BLUeVDoEdfhVKU5ZAYxQmjrs/PqtfXh9QRv9h3sr
      8Nja0Ha3c+ONN/bbXhQFCnKTKMhNAoJeQYfKG3ophNTUVE6ePInL5brsXoJM/ySkTeKjT3Zh
      TzT0VARLTJuEx95I5enTNLXbCVMPz1abSgpwW7eFZJ+bmICX6PZKHBWbLtyg0CAaEhFME1BN
      mBecjRtTgoNvRAKC4voECgqisme2fzkC3RYkay2BrvoeE5PU1YC/Zh++0vcAiAf+B+hGoE2h
      ol1U4RUEVEiIkkTM9v/GqVAHB9aLBmMp4A8OvH43SBLS+UHa7+29KrmIJef+64vud74ysC9A
      cS6poFKDIChAVATPicG/Y/xeJMArCAQQUBAgxu9FIwXQ1x3AU707tH5EBaj1QQWh1iNo9KDS
      BpWEOpyAUsNqZztuQaRbEHELoqwALLZuPjlaTbRRR+GUZBSKkbEvXt1k7Rn8AQJ+P7v37uOb
      n12BwWAY0LOCXkFHeH/3KeCCV9ANk4OriNbW1su6ksr0z+UrgomsWrWGslOVrF6zKrgKGAZi
      /F4K3V04BAUNCjV1xgksmPXZc7PqZISIeARx+E1TojYStJEoEqZfck3yewlYa6ir2cemA38m
      NuDF7PdiDnhRIeFFwI+A4HGAVoWg0gVXLwoViKpzg63q3OxYAIUqeCyqgvcp1YAYPH/u74P1
      h9hfd4gAAn4B/Aj4zg3Okqjghyv+CxQaEBXB7+/cs4LPPT/An79+5SHW7XPzk1fW9Xn9gdlf
      YGXuWvB1I7ltSB4neJ3Bv71O8NiRPA4kjwM8DiSPHcnbDW578G+3DcnejOQOXlvpsffarxmX
      CsDtduNwOGhqs/KzV/Zj8wS/koXTJ/DtdYU9G1Qer5+dx2rocrqYNzl5SAvApMabUCnFHiVg
      a68nN0XPjBkzBvwse7eHjw709gp6d+dJbpw1kaioKBoaGmQFcA1criKYMjxi2E1rDUoNT0ZO
      7DmeaE7nxmn3DKNEA0dQqFCY03H6XGzTmvq873pWBKv3ezjUWn7ZawpBgSJh4L/Ba0EQRVCH
      I6jDr+k5To+Dh159ADUSYVKAMCmAII3QiJfByAUUCAQ4evQohw4dQpIkik41sr+0Hr05EWNc
      KhptOL9/bCUJZj0+f4AfvbidE1UtAISplfzs4RtJT4q6bvL0x85jNby84SiWLjt6+ym+/eW7
      mD594C+5zenmyz9/H7f3wpI3Nc7Ib75xK/v376ehoYE77rjjmuX1+Xy0tLRc83PGMl6vF4VC
      IecakhkRjJsVgMfjYfv27dTV1bF06VKSk5OJ3HeGau9OOuoraDh5gLiJF0q9napt7xn8AVwe
      H+v3VfLvdxUMmcwLp09g4fQJ7Nmzh7o6Jbm5Of03ugx6rZrlBek9JiBRgNvPeQUlJCRQUlKC
      2+1Go7k27wulUkliYuI1PWOs43Q6UavVcplOmRHBuHgLJUliy5Yt2Gw21q5di9kczK1/46yJ
      rN9XgSbcSGdTFQZPHY3Vp0gwzxpmiS9gsVgoKyvjxhtvvOrsnUGvoJlMmxR3iVdQbGwskiRh
      tVqJi4u7nqLLyMiMcMaFAjhz5gz19fXcc889mEwX7IjRRh3PfX35uU3g+cTpvOz4ZDtut5v8
      grlMnRjbywR027yMIZX7fLbP2NhYUlNTr+lZn/YKOo9arUav19PY2CgrABmZccaYVwBer5f9
      +/czbdq0XoP/eSIjtD3mEIAwjZpNmzahVqv50YOLz20Cu5k3OWlIN4EhmO2zpqaGtWvXDprN
      WBRFYmNj5cRwMjLjkDGvAI4ePYokScya1b9ZZ29JHS9+eJT6OhcfH36HJ7+qYdnsqf22Gwz8
      fj/79u0jIyOD2NjYfu+3Od08//YBik41kp4YxZOfmU9khDakvmJiYjhx4oScAE1GZpwxpl0R
      zidNKygoQK1WX/Hetk4nv3pjLy1WByq9mUZvJH/469vU1NQMkbS9KSsro7Ozk/z8/JDuf3lj
      MftK6/H6ApysaeNPHxwOua/o6Gjsdjvd3d393zxG8fv9+P1BLymv1yung5YZF4xpBVBZWYlW
      qyU9Pb3fe2uaO/Fc5CapNyfiVkXz8ccf097ePphiXoLD4aCoqIjZs2ej1+tDalNR137F4yth
      MpkQBAGrdfxWZCsqKuLYsWMA/OlPf8Lj8YTUTvL72Piv93jzzX/S3uk8f5btH63nvffe5+Md
      +5B1icxIZcwqgEAgQEVFBVlZWSHZz1PjjKhVF2IOBEFg5S1LSEpKYtOmTUM2Oz6f7VOv1zNl
      ypSQ22Umm694fCU0Gg0RERHj1oe/vb2dN954g1dffZVf/OIXJCUl9btiPE/d6RKMybmsvGUh
      e/YeOHdWYMGyW1i7djWdzdV4A7IGkBmZjKo9ALfXx0//tpPiymYACqck8537bkB5mfQNDQ0N
      dHZ2Mnny5JCebTbq+PW/r+DN7aV0Odwszktl4fQJQC7bt2/n7bff5s4770SrDc2ufrWUlpZy
      9uxZ7r777gEFwX319jmkxhspKm8kIymK+5aFvnchCAIJCQm0trZejcijHrPZzNNPP015eTlK
      pTLkwR+gy2IhNi0VndFAmOTqOd/WUMPGTZvQJ2ShUgj4fD4kScLnC9YHOG9ukpEZTkaVAvjk
      aHXP4A/BTduDJ+spnHJpGoPKykqSkpLQ6XQhPz8xOoJv3D33kvMLFy7k/fffZ+PGjaxevXrQ
      gnisViv79+8nPz9/wPl+FKLI6huyWX1D9lX1bTKZKCkpGbcbwYcPH+bEiROkp6ej1WrJzs4O
      6XvQGw20tlnw6CW6pfOKQyIuZSIPPvQV3n/7LRwuL/qwYAyH1+uVA8FkRgyjygTU3nWpGeZy
      5zweD1VVVeTkXF3k7KdRKpUsX74ch8PBzp07B6WKlt/v55NPPiE+Pn5App/rRVRUFO2WLk6c
      bqTb7R3y/oeb+Ph4wsLCiIuLIyYmJmQlmJIxhfqTB3n3g40UzJ1N0d49OBwO3n/vXdZvWA86
      E1q1PNjLjExG1Zs5NzeJt7aX4vMHB+AwtYLZWZfmxa+urgYgOfny6WevhvDwcJYvX84HH3xA
      eHg4BQXXNyVEcXExFouFu+66a8jyxFjtLpo67KTGGSmptfH/Pizig3KIjYnhB19YNKB9hNGO
      2WwmOTmZlpaWAZn5RKWGtXfd23McX3gDAGtvv/bcSjIyg82oUgATE0z86MHFfLi3AoUosHZB
      9iXBWZIkcfr0aVJTU686dUJfxMTEcNNNN7Fp0ybCw8P7nalLkkRzhwN7t4eJCaY+U03X1tZy
      +PBhlixZQkTE0ASbbTtSxe/eOYjXF8AQrsHj9YFCjdfloNNh4C8bivnpw/3XHRgr2O12iouL
      AQgLC2P+/Pnj0hQmM74YVQpAEASmp8cxPb3vlAV+v5+mpiYWLlw4KDJMmDCBBQsWsHPnTpRK
      JdnZl7e5BySJv2w4yvu7ypGAtHgTz3xpCSZ978IrHR0dbN26lWnTppGRMTSpJrrdXl5af7Qn
      1XSXww2ASq3F0x2sztTe5eyz/VgkNTWVxx9/HIAXXniBQCAgZ+yUGfOMKgUQCm1tbfh8vkHN
      SpmdnY3X62XHjh1IknTZvYbqJivv7bqQU/xsk5X3dp3kCyvyes45HA42bdpEQkICc+bMwe31
      cbbRSowpnCjD4Hkbub1+7N2X+rmrtOF4XUEFMH/q+KoPcPbsWV5//XWAcR0QJzO+GHMKoKam
      hqioqEF11xQEgalTp6JUKtm5cycej4fp03tXM+roZ8O6q6uLDRs2oNFoWLp0KXVtdp55aTvt
      Xd0oRIGHVs3itnmZgyK/Qadh2qQ4jlY29Zy7dW4G1okaDhYd4TMrZrBm/tV5E41W0tLSWLdu
      HdXV1cyZM0f20pEZF4ypt1ySJBobG0lKSuo5Pna6mfX7KlAoRG5fkENWyvXZ2BQEgdzcXBQK
      BTt27KCpqYnFixf35NTPmRCN2aDtGfQFAW44567a3NzMRx99hNls5qabbkKtVvP3Tft77vUH
      JP76UTELpk3AEH5tOfovhygKfOe+Qt7cVkpNSyfT0+NYMz+b5qYEYhUWVs6ddNnYirFMSUkJ
      27ZtY+bMmfzmN7/h8ccfl5WAzJhnTL3hXq+Xtra2nsRvpxssPPPyJ/j9wUjMovJGfv3oCuKj
      QkuvEApZWVmYzWa2bt3KC3/5Ox1SJFJYFEtnTeQnX17Km9tLsTk9LJmZRl56NHv27KG0tJT0
      9HQWLVrUE+z16RWD2+PH7vIMigIAiNBp+NLK3iULjUYjPp8Ph8NxzcVhRhtWq5XMzExmzpzJ
      3r178fv9sgKQGfOMqTe8tbUVSZKIjg4WO9lfWt8z+EOwqtfhU43X3bRiNptZfusqHnjieRpq
      DyGICrZuj+fRdYu4c24adrud5ubTvPbax2g0GpYsWUJ6enovL5P5U1OorO/oOc5IiiTOdG01
      QAeKRqNBo9Fgs9mIihq60pcjgcLCQtavX8+f//xn1qxZM+4UoMz4ZMwpgMjIyB77v/kyG6mD
      tbl6urETZeQEkg2JdLXW4bJ18Pb6bbTXJqDX64mJiaGwsJCMjIzLpnhYuzAbtVpB0ckG4s0R
      3Lt0cp9uo4OFSqUiPDwcq9V6zQVoRhtHjx4lLS2NVatW8Y9//INJkybJKwCZMc+YesObmpp6
      Zv8AS2emsftELcdOB9NHzJ+aQn724HgHRUaEIQCiQokpPg3i07h5YQ5fWDEjJH9yhSiyqjCL
      VYVZgyJfqBgMBrq6uoZVhuFApVJx8OBB1Go1dXV1cgyAzLhgzCiAQCBAe3t7rwhdjVrJj7+0
      hLNNVpQKkeQYw6D9sNPiTaxdkM17F/n9r12QM+oGEpPJREtLCzanmze2lVLb0smM9DhWz88e
      0xvDU6dOxev1UlxczEMPPTSgRHwyMqOVMaMAbDYbdru91woAgt46ExMiB6XP+tYu3tpeSpfT
      w5K8VB68NY9b52Vid1458nckYzAYOHWqgl+8uoficyunIxVNOFxePnvL9H5aj14qKioQBIHa
      2lr+9re/8eijj8qBYDJjnjGjANra2tBoNBiNxiHpz+Hy8IP/t63HdbPoVANKhUjh1BQYxfun
      JpOJdmsXxXUSiBdej90nase0Amhvb6ehoYHY2Fj8fj9er1feCJYZ84yZKU5bWxtms7nfWVtA
      kqhqtFDb0nlNZf/Ka9p7BXZJEuwpqbvq540UwsPDUYigFHrnq7/chvpYYs6cOWi1WtasWcO0
      adPkwV9mXDDkKwBJkmisq8UnqJiQnIDT2Y1Op8XtciIoNL2qcg3kma2trZeYfz6NyxMsKNOz
      KTwthW/fW3hVppqoCC0CcLEKGQuDpEajQa/TsnbeRN4vasLrC2DSa/jCihnDLdqgsXXrVqKi
      ojh+/DjHjx/HZDKRl5cnm4BkxjxDrgAaa05T29KF39lGVX0Hrs4abl52E/9885+suee+q1IA
      gUAAi8XSZ2K282w7crZn8AfYfbyWxTNSmTt54GmjU+ONrF2Yw3s7T57b9DWydsHoT5+gUqnQ
      arVMSY9izbICmjvspMaZCNOMGWvhJSxbtgxJknqKwVzvLLIyMiOVIf9VJ0xIxyedofRELclJ
      Rqpbutn4r/fIX3wL+jAVfr+fQCCAJEkEAoGeEnpXwmaz0dXVRUREBG63u8/7Wi22S861dNiu
      2OZKPHBjLsvyUrB1e5iYEIlCFK76WSOJsLAwLBYLmZkCaXERgB+3+9IShqIojonB0ul08l//
      9V+YTCYsFgtLly5l2bJlwy2WjMygMyzTOikgoVQqcNq6kCQJt9uN8pzbnUKhQKFQ9CiAUNzx
      mpqa0Ol0xMTEXPH+wqmpvLvrFP5zRbq1aiX5k1Ouyd47IWHs2YrNZvO4Sgexd+9eVq5cybx5
      85AkiWeffZalS5eGZAKS/D4+2vAhtm4fN95yK2ajDpA4uPsTGtqs6Axmli1ZgDjK3IFlxgcD
      VgCdnZ28+OKLLFmyhLy8vAH7uddUnsIjqklOTuB0QytqrY7bblvNK6+8RvQ99xGhDb0g93na
      2towGo39KouMpEh+9ODiXsnhrmdeoLGCXq+nubm5/xvHCA6HgyNHjlBWVgYEJxShOgjUnS7B
      mJzLookmtu49wOoVSwBImZhL/vw43nvnTdy+ANqrMG3KyAw2A1YARqORRx55hHfffZdnn32W
      1atXs27dupADZxInTKCi8jQoI1hx0yy6Oi2ISjV33nk7Hp8XGLgCsFqtmM39Z/kUBIEZGfHM
      yIgfcB/jCaPRiMPhwO/3j4uAqGXLljF79uye49tuuy3kDeAui4XYtFR0RgNhkuvcWYGYmEg+
      ev8dTImZhKkU+Hw+JEnqMWn6/Zea1GRkhpoBKwCbzcZzzz1HQkIC//u//0tVVRWnT58mKyu0
      FAYqjZbJU6b2HEdGBp3mdXoDuoEKQ9ADKGivHpzc+eOR8PBwPB4Pbrcbne5q/lVGF+Hh4YSH
      X13iPb3RQGubBY9eolu6MHnZ8K93mFywhElJwep15/MKeb1e1Gq1nGdIZkQwYD83SZJYt24d
      Dz/8MFarlZkzZ4Y8+A8Gfr+frq6ucZe9cjDR6/VIkjSuKmOdPHmSyspKANavX4/X6w2pXUrG
      FOpPHuTdDzZSMHc2RXv34HR1Y7d7KDl8gPWbtuL1BwZTdBmZq2ZA0xBJkti0aRMVFRXk5+ez
      fft2nnzyyWHdLHQ4HPh8viGLAL6e1J1LJWFzelg6M43501JGRO4glUqFWq3G4XCEZFob7bS3
      t/PCCy8giiIxMTEArFixIqS2olLD2rvu7TmOL7wBgPs+97nrL6iMzHVmwOvQ2NhYXC4XZrOZ
      Rx55BL1+eDdRLRYLKpVq2OUYKPbuYCqJjotSSaiUC64qJuF6o1KpCAsLGzdZQc1mM4899hgK
      hYL4eHl/SGb8MGAF4HK5OHPmDNXV1axevZrjx4+zfPnywZAtJDo6OjAajT2bdpIkcbbJikIU
      SYkdvOyf18rJmrZeVcAkCfaW1I0IBQBBM5DD4bimZ5SXHCM1eyphSpGqinLMiWl4bM18susg
      iCJLb1pOwNbE0TOt3LRwLidLjjExO5ePN25EodaQPDGbgK2JulYr/oDIjcuWcvpEEXWtnYiC
      wNwbCjm0ZwcOl5fkiTkY1RKxKZOI0Kk5dqyY6dNDj162Wq384x//wGQyYTKZeOihh+RIYJkx
      z4AUQElJCTU1NXz/+9/H6/Xyox/9iDvvvHOwZAsJq9VKZGQw26fb6+Onf93Zk8XyhqkpfGfd
      1aV6GGyiIoauWM3VoNfrsdvt1/SMttZGkjKDG/6WtjbCY5LZuWMPK++4h4Czg807djEz3UzF
      yeNMmTKZtpZGUjKzEJQR3HLLEgB2bTvJohtvpqO6hOKSs/g6rSy68WZ0KpHOllo8ooE1axbg
      8XgoPrgfU0KwkE1TcwPTCV0B+P1+Vq9eTWFh4TV9ZhmZ0cSARka73U5iYiKiKKJWq4mPjx9W
      7xtJkujs7MRkMgHBVA/FF6V62HOiloMnG4ZLvCuSlmBizfwLqSMmfup4uAkPD79mBXApAfTh
      RsJUCnTGaAR/cAVUuGgRe3bu6LmrruoUH3zwAeVnavB5XOz8ZDs79xeTnBSD1+Vky6aNbPho
      C2pDLJpAF6+8+hp1zR3g97Bt62Y2bNhAq3VgqxeDwcDWrVv5xS9+wZ///GcCAXnjVmbsM6AV
      QEFBAX/84x95+umn8fv9FBQU9My+h4NAIIDNZuvZAP50YXWADtvI9GQRBYEv3ZbHynmZ2F0e
      JsaPrPoB4eHhOBwOJEm6jmY0EbvDhtcfQHLb8ItB5wGNzkSySUV5fRszgeSJWaw4F1DVWl1K
      aloqu1otxETpORum46YFwRWA3+9nyU23QsDLOx98yITYaJYuuwGzQcumzRsGJFlKSgqzZs0i
      IiICrVYrm39kxgUDUgCiKPLVr351sGQZMB6Ph+7ubgwGAwBzc5P45ydl+M653YWplczKTBhO
      Ea+IIAjEm0fm5rVer8fj8eDz+a4630+4VsuWjR8Sm5BMtMGASqmgsGAG7779DlLAz6JlyxGd
      zQhhajILF3Dq9bdQCCJRURcmFaZIM4kpE1muUbBj9yHM2jA2b/gQUVBQMHcWO3fsQqNWMTFj
      Mjo8qJTBgTsqcmDeS7t27cJkMlFbW4vD4WD69Omo1QMPSpSRGU0I0lUkxff5fHR1daHRaK46
      gKY/QskF1NTUxAcffMDnP/95NBoNkiRx7HQz6/dVolAIrF2QQ3bK2HdjHAwsFgtvvfUW999/
      /6jzsLoaTp8+zQcffEBTUxMmk4knnnhiUFYBTqdTDgSTGTFcVS6g3/3ud4SHh2MymbjvvvuG
      LQ6gs7MTrVbb07+c6uH6cf477e7uHhcKICEhgTvuuAOfz4coirIJSGZcMOC3vKOjg5ycHOLj
      47FYLCFHTA4GVqu1ZwNY5vqiVqvRaDSDsBE8Mtm3bx8Oh4P09HS2bNkyJtJ6y8j0x4BXAGlp
      aZw5c4YjR45QUFAwrLPDzs7OHvu/zPVFqVSOKwUwffp0nn/+eYxGIwaDQbb/h0CN5Sx29+Xf
      D61Ky0Rz+hBLJDNQBqQADh8+zO7du4GgieDYsWMUFhYOS1EQSZKw2WzExcUNed/jBb1eP27y
      ATmdTu6//35SUlLQarUjNoBwJPFK0cscazhy2WuZMdk8c+vPh1gimYEyIAUwbdo0cnJyej9g
      mDazAoEAdrudqhYn6/++C4UosHZBNtkTrlwXWCZ0BicWYGQSHh7OP/7xD+677z7CwsKIj4+X
      lYDMmGdAo7dKpcLn8/Hss89itVoRBIGf//znw7IC8Hq91DZ18EZxCcqwoBmq6FQj//vvy0kw
      Rwy5PGMRnU5HS0vLcIsxJHi9XtLS0ti3bx96vZ6VK1fKCkBmzDPg6XtzczNz587FZrMhSRIO
      h2NYNmK7uro429yJoLzg5uny+Dh8qpGVhbICuB7odLprzgc0WjAYDHR2dhIfH49CoZAHf5lx
      wYC9gJKTk4mLi0Ov11NXVzdocQD9YbPZiAjXolD23qyLMoz9AiZDhU6nw+12j4vqVbt27eKm
      m27C4/HQ0NCAx+MZbpFkZAadASkAl8vFsWPHmD59OvX19Vt7npMAACAASURBVOTm5g6L+QeC
      CmDu1EnMSL+wCXzD1GTycxKHRZ6xiE6nw+fzjYvBcNasWbz77rts27YNQRBkLyCZccGATEDH
      jx+nu7ubjz/+mAkTJlBRUYHD4RiWVYDNZiMq0sgz9y7hbFMnClEY0emfRyPh4eF4vV48Hg9a
      7cjJVHq98fv97Nu3j+zs7J66AAPB2t6C1eklNTmJi1+/rq5O9BEGRPmdlBmhDGgFkJCQwN69
      e/noo49YsmQJHo9n2IqG22w2IiIiEASBiQkmJsQZ5cH/OqNSqVAqlTidzuEWZVA5ePAgXq+X
      QCDAgQMHBtTWbmnmw807qCk/9v/bO/P4Kqrz/79n5q7ZF7KRnSQkBAiL7HsIoIK4Ai5Va12q
      BavFrdVqq22t/vrtaqXWpdbWBUGxKrIjSwIEw07CvgUSyEr23P3O/P4IiSABE8hdcjPv14sX
      mTlz5zx37r3nc85zznkeCvYeajuft245b73zHyw233efqXRfOjUCiIuL495778VoNKLVarn5
      5psxGAyusu2SKIpCU1MTCQkJbq+7J6HVatHr9T4/EVxZWYnBYECSJHbs2EFoaCjp6ekd6lCc
      PnGEYeOy6ds7gOXL18OglpDe47Kvx2Re1nadw+FAURQcDgeAT8yrXC5ktiIr6m7qbkCnVwHF
      xHwbXTM5OblLjekosizT3Nys7gJ2MZIkYTAYfH4z2ODBg9m9ezd2u52EhARKS0vp27dvhwRA
      kRUkUUBARDgvrOJ3X9u6X8Zut/tMMLjLxUsSRMGjucJVOkanvoUFBQXk5ubicDjQaDTIssz8
      +fPdPhFstVqx2WweW4HUkzAYDD4/AkhISLji0WRMUh9WbdxEU+8gAqPjOHHkML2T+lB5poSz
      NTUcP3GCvql90Gk84ypVUbkcnU4IExsby65du7jhhhtYtGgRNpvN7QLQ1NSEKIqqALiBgIAA
      n58D+C7FxcUkJiZ2aAQQ3CuW8SMd1DRaGZuRRm11NZIoIDudDBs5CkUREFDnproTlY0VVDdX
      tVsmAP2iB7jXIBfS6XFoeHg4+fn51NTUsG/fPm666SZX2HVZmpqa0Gq1Hpl/6GkYjUaqq6s9
      bYZbKSoqIiEhocOLCmLiEml1jIZHRACQ2CfVRdapuJoNR9fyeeEn7ZZJgsT79yxxs0Wuo9MC
      YDAYeOqpp8jPz+f555/3SCPc1NSk9v7dhJ+fX48YAVRVVbFy5UqgxX9fVFREVlaWh61SUXEt
      nd4JXFdXx9/+9jcEQeBPf/oTFovFFXZdlubmZgID1XAP7sBoNGKxWHw+SXpxcTEJCQnk5ORQ
      V1fH+vXrfX7uQ0XlihLCpKenc9111xETE+ORH4k6AnAfrbuBPZn4xx306tWL/Px89uzZg9Pp
      JDw83OdFT0Wl0y6g5ORk9u3bx6uvvsqIESMID3dvzt3WAHTurrenYjQa2wTAl5f1RUZGMmfO
      HOrq6pgyZUqPSYWp0rPptADU1dVRUlLCs88+6wp7vpdWAVB/nO5Bp9OhKAoWi8Wnn3lzczNL
      ly5FlmUaGhqYMGGCurO8E/jJTno7bTSIElVi168KPFlzgv9u+9cly+8Zfj9JYX26vF5fp9MC
      IEkSO3fu5OWXX8bf35958+a5dRmo0+nEZDL5dGPkTWi1WnQ6nUfmetxJREQEM2fOJDc3l40b
      NzJ27Fg1MfxlUKyNpDVXk9ZcTbrdTILT2rbY1Q40ms5i/uoJxPBUxPAUxLBkxNA+CNKVbYAz
      2U0cqCi6dLlNna+5Ejr9aVitVp5++mlSUlryfbo7FpDVakVRFPz81LDP7kCSpB4RD6i4uJiC
      ggKmT59OZGSkp83xOhSHFWfZHpwn83GUfINcuZ9psgM7cFxj4AtjGMUaA8GygzinjSRRIrzq
      II6ja0A5t0VakBBC4pFCk1sEISwZsVdfxNAkBJ06p+dqnLKTQ5UHLjjXKQGoq6vjr3/9a9t2
      +ZycnC41sCM0NTUhCIIqAG6iNRyEr48A4uPjqamp4eOPP0YURebOndujRwCKw4azoghn6baW
      f6d3gtMGkhYpagC6YfezsKKIdY3lOISLn1NrTmDFYUWuO4l89ljLv5rjyGeP4TiRC0prPCQB
      ISAKsVdq20ihRSBSEP1C3fvGPYAiy2BrQrE2oFgbEbR+CIHRCJqunXOzOiz8bvXzF5zrlACc
      OnWKnJwcJk6cyBtvvOExAdDpdGq8djfi6wKQm5tLXl4ew4cPx2Kx8Mwzz3jaJLejKDJy5QGc
      Jd/gOPUNzrLdYGsGBMSIDHSDf4CUMBKp92AEXYv7tXztSziaLp8yVNDokXr1RerV98L6ZAdy
      XQlyzQnk2hPnBOII9tM7wf7taFMwhiKGpxBoCCbbXEeZpKNc0lInasBL5mgURQZrE4qtCcVS
      j2JtRLE2tjTq5x0rtiY4/9jaUt7ynJWL7isYQxECohACoxEDohCCeiP6RyIExbQcB0YjSFfn
      fu+UAAQHB/P555+zZcsWnE4nv//973n66afdOgfgqfwDPRlf3wyWlJREYWEhhYWFlJSUUF1d
      Ta9evTxtlktRFBn57PGW3v2pfBynd4ClHhAQw1PQ9rsRKX4EmvgRCIbgLq9fEDVIYclIYRcG
      lFQUGaWx7Nxo4Zw41JwguHQHd1jq2q6zIGARRBznRCB42ZM0S3pozRAotfSe23rR0rnzooQg
      akCUQJCg7W/xXGMq0K/mONrmqrZ7OxAwKjIGRSZAUTB9cl+HGvDz3i3oAxB0AQj6QARDMGJQ
      LJx3LOgDW4TVEAg2E3LDGRRTNXL9aZSGM9jP7Dr3+Zx/WwHBEIIQFHtOEKLO/R9z7u9ohIDI
      y4pEpwQgMTGRX/3qV515yUU01lXz9fo8HE6ZkeOyqasqZeDALPZu20p8v8GEBlx+Z7G6Asj9
      GI1G6urqvv/CbkpCQgLz5s1DURQOHTrEunXrmDVrls+5gOS6Ehyn8lsa/ZJtKKaWEB9CcBza
      lBykhFFIccMQAzw3ByIIYkuDFhQLyRPazh+o2MdfVvycWKeNGIeNXrIdvaKgOdfwDg5JxGgI
      Bqet5YzjXChqpw1QWnrkALK9pccuO0F2osiOFleUIoPTDopCrL2ZSKcdraIAChJgFQRMgoRZ
      kADhsg24oD93rG8pRx+I0I6brLModgtyYxlKUwVKYzlyYzlKUzlyY0WLm620AFrf57cPFMGv
      F0JAFLJ/BHOaq6gRNdSJGs6K2s5PAkPLSpzWTTIajaZTy+UcssJ1M2Yimyr5eus+9FIT0WH+
      HK1sImv494eVMJlMqv/fzRiNRsrKyjxthssRBIGMjAwyMjI69br2MoI57FaOnzhJQlIfDDrP
      hH5WFBnHkTU4ivNaGvyG0wAIAZFICSPRJIxCihuOGBznEfs6S5Oo4ZCo4ZD24t9//NjHiIoe
      2CX1LN714eVjAc3+d5fU01kEraFlxBR26TD8irUJubkKpeE0clMFSmPFOZEoh7pixlgbMCrf
      jlY6/c0sKyvj1VdfJSkpCUEQOr0MNDQsgvJTx1i9IZ+Zt9zKhhVL+ODTwzw896fAt+KiKAqy
      LLcl0Gilrq6O2NhYNdmEG9FqtTQ0NFz0zEVR9FhOaG+hJSNYHvG9/KmoaWLkoHRA4avPlpCU
      kcn/vviS22fdiugBd7VcsQ/L8qcR9EEtvfth96NJGIUQ0vFAdyrdC0EfgKQPaFckTLZmfrbw
      LoyKTIjsJEy2d14A/Pz8GDVqFLfddhtApxNb1FWWsG5LIXf94C40koh/aAS3Dx/OqjUbuGX6
      ZCRJQpKkNgE4f5lpqyCEhIT49K5Ub6M17pLa4F9MexnBFKcZ0T+SwYMGU1VRhsXuxE/n/nwA
      UvRA/O9f2eITVht8FQBBwCxImEWJMnSdjwUkiiKVlZW88cYb/POf/7yoh/59VJaXo9HIrFi+
      jANHigkLDaN3cjpJoRpKKy/vZ1YUBbPZrLqA3IzBYMDpdHb6s+4JKLKC+N2MYApwzucrCsLl
      5wddjBjUW238VS5Jp0cAAQEBpKSkUFZWhiAInf5y9c0aTt+s4eedSQJgyOgJ7V5/Pg6HA5vN
      pgqAm2kNCGez2TAajZ42x6u4VEYwW1MZR48do/xsEwadb00mq/gOnf5mlpaWUldXh7+/Pzqd
      zq3Jrc1mM4IgqIlg3EzrbmB13uViWjKCDUIX0puxw/oTFBKKJIrccMONNDY0MPPGG1pGASoq
      XkinRwBBQUH4+/tTUVFBSUkJFovFbf745uZmRFFUe6FuRqPRoNFofD45/JXSXkYwjX8gQ4YM
      cbstJbUnafzuUsBzGLQG+oSrmcq8CVmROVix/5LlUYFRhPtHuKx+QVGUTnkoGxsbKSkpITU1
      FbPZTHBw128SAdqdBD5y5Ahbt27lnnvucUmdKu0jyzILFy7kmmuuuewSSYfDQWXl5XeG9nTs
      djuSJPncHgOV7kmnRwB6vZ7ly5dz33334e/vj6IobptkUvcAeAZRFDsUDkKj0dC7d283WdU9
      MZlM6HS6Tq+eU1FxBZ3uhlitVgwGAx9//DHvvvuuW1eGqJnAPIder1fnAFRUfIxOdUMOHTpE
      fX09jz76qKvsuSxms1n1/3sIPz8/dQ6gG6IocpeEIVDxTTolAGazmYULF7Jp0yagZev8o48+
      6rbNQWazmZCQELfUpXIhBoOBhoYGT5uh0gmcZ3ZhWf0Cxhv/jniZ8AEqPZdOOyKnTp3KhAnf
      rtl3ly+zdROYOgLwDAaDQZ3g7WYIQbEolnrMq5/Hb/Z7Vx06WMX36NTYMDk5mREjRhAQEND2
      z10TwLIsq7uAPYjBYPBpF5DT6Wzb02K32+nM4jhFUTp1vbsQAyLRZz+HXLYX2/Z3PW2OihfS
      KQEIDg72WJx0WZbVnagexGg0YrfbfTYcxI4dO9i7dy8Ab731FjabrUOvs5ub+PD991n44Qcc
      PVV+7qzC2uVf8sUXX7J4yZc4PSgO2vTr0WTMwLb1nzjLL51TV6XnIdcWX1k4aE/QmgtY3QXs
      GQwGAw6HA4fD4XNLGM+ePcvixYsRRZG1a9eSlpbW4YxzJcf2M2jsFDLjg1i+Jp/UhGhAYMr0
      GzE3NbB02QoUpWXDT+veFnfungfQjH8aR0kBltUvoL/9g7ZkKSo9F3nfEqwbXuk+AqCGgfAs
      vhwQLjw8nBdffJFDhw6h0Wg6lW7UbDLjF+GHpDWi49uGvfzUcTZuzkcKjMDTgSAEQzD6KS9i
      /fJRbFv+jm78Ux62SMVjOK1Y1/8e+cAXSH2yu48AmEwmJElSw0B7CJ1Oh6IoHXaNdDd27txJ
      UVERKSkpGI1G0tPTOzS/FR4ZSdGR44TKociGIOrr6ggI8EcbEMbtd97FF58twWxzEGBomYAV
      RbEttpJb6TMBOet27Hs+gpRJaBJGubd+FY8jN5Zh/upJ5Ip96EY+gm7UI53fCOYpzGYzBoNB
      DW3rIXw9IFx0dDQGg4GoqCgiIiI6/D2LTsogkAa27j7ExHHDqSw7g93pZH/hTpavWElsSib+
      Bu9YfaMfNx8hJAHLml+jWNQlvT0JR+k2TAvvQq45jmHGH9GPeRRB1HSfEYC6BNSztAaE+75w
      EN2V8PBw4uLiqKys7OT3TGDkuEltR2n9MgEYP3Fy1xrYBQg6P4zXvoxp8Q+x5v4R/dSX1A6V
      j6MoMvZdH2HN+xNiSDzG2/6FFN6nrbzbCIAaB8izSJKEVqv12RFAU1MTe/bsAVrmO8aOHeuT
      jaMUMwjdiIewbX0DKXk82rSpnjZJxUUoNhOW9S/j2N/i7zde9wqCPuCCa7qNAKh7ADyLIAjo
      9XqfHQEkJiby9NNPA/DOO+8gy7LPRuzUjXgIx4k8rOt+h9R7MKILww2reAa5vhTzsieRKw+2
      +PtHz203JEi3EgA1DIRnMRgMPjsCKC4uZtGiRQDdesPblhO5lDWcabcsxBhKTt9rESQdhmm/
      xfTRHVjXvYzhhj+r8YJ8CMfJfCwrnkZxOjDe+BqaPhMveW23EABFUbBYLOocgIfx5d3ASUlJ
      3H777Zw8eZJhw4Z1270OW07ksbN0W7tlyeEp5PS9FgCpVxr68fOxbngVx4GlaDNvcqeZKi5A
      UWTsO/6DdfNriKGJ+M38K2Jo0mVf0y1kvzUOkLoE1LPodDqfHQHs27ePr776Co1Gw2uvveaT
      +x2+i3bQnUjxo7CsfwW57pSnzVG5ChSbCcvK57Dm/QlN6mT87vjwext/6CYCIMsyVqtVHQF4
      GF92AdXV1ZGWlsaQIUPQarVu363rCQRRwjD1RQAsa19CkX3/Pfsicl0JpsX34Di0At24n2GY
      /n8Iuo7lTekWAmCz2ZBlWRUAD6PX6312I9jo0aOx2+28/fbb3HjjjT1mtCkGx6Gf+AzOkm+w
      7/rA0+aodBJH8SZMH9+F0lSJ8eYF6Ic/2Kn5nG4hAGazuS0toYrnaE0L6Y2RL6+W3bt3k5SU
      xOOPP862bdt6hAuoFd2AW9GkTcW65e84qw552hyVDqDITqwFb2P+4qcIgdH43fEhmqRxnb5P
      txAAq9WKIAiditGi0vXodLoLwib7Elqtlm3btnH48GFKS0t9cg/A5dBnP4egC8Cy6nkUh2+6
      +XwFxdqIZcUz2Db/DU3fafjNfg8xJOGK7tUtBMBsNqPVarvtygxfQa/X43A4sNvtnjalyxkw
      YACDBg1iz549PPjgg0iS5GmT3IroH4E+5wXkqoPYvnnT0+aoXAJnzXFMi3+I4+jX6Mc/geG6
      Vzrs72+PbtGiWiwW1f3jBRiNRp+NCHrkyBEEQaCkpIT333+fxx57zGc3gl0KbWoOjv43Ydv2
      DlLyeDS9h3jaJJVzKIqC88RGzKt+iSBIGG9agCZpbKfuYXfa+LLoswvOdRsBUCeAPU/rCMwX
      RwBnz57lzJkzREZG4nQ6sdvtPWYi+HwMk35Bc+kOLKt+if8PPrmq3qUvoCgKiqUWQTIg6DwT
      iUCRndi2vYNty+uIEekYb/wbYlBsp+9jd9pZsufjC851CwFQA8F5BxqNBq1W65PhIIYNG8aa
      NWuYOnUqR48e7ZGNP4CgC8Aw7TeYP30Aa96f0U9+vsfNh8imGpwnt+A4tRXnqXyUpgpAQAiM
      RgxPRQxNQgxLRgxPQQxLQTS6LkKBYm3Csuo5HMfWoel3A4acXyNou64t7BYCoLqAvANfDQn9
      9ddfExYWRmFhIYWFhYSEhDB48OAe5wJqRRM3HN0192Hb/m80KZM77WrobigOC87SHTiKN+Es
      3YZcdbClwBCMJm44UvwDKLZm5JrjyNVHsJduB8e3O+IFv7AWIQhLRgzt0/J/WDJiUO+rsstZ
      cwLL0p8h1xWjn/QsuiE/uKr7tUe3EACz2UxwcLCnzejx+KoA5OTkoChKWzIYrdY74vd7Et2o
      n+AozsOy5lf43b3Epb1cd6MoMnLFfhwnt+A8tRXnmZ0gO0DStURLHfs4mqRxiL3SEMSLm0hF
      llEaz7QIQs1x5JoTyDUnsB9eBZb6by/UBZwThaS2kYMU1gchJAFBvPQiA0VRcBzfgGXlLxA0
      eoy3/QtN3DBXPArvFwBFUbBareoIwAtojQjqawJgMpl45ZVXCAkJoba2luzsbHJycjxtlkcR
      tEYM017GtOjuloBx0//QbV1BiqKg1J1qcemUfIPj1FawNgACYq80tEPuRpM4Bqn3kA65VwRR
      RAiOQwyOg+QJF9ZjOnuhMNSewFm6HceBpd/eQNIihiS1uJDCUxBDz40YQhNB1GIreBNb/huI
      MQMxzvgzYmC0C55KC91CACwWS4/1yXobvhgSOj8/nxkzZjBq1CgUReEPf/gD2dnZHXYBFe4s
      oLzOzMQJ49BpWnp25aeL2b1nP4lp/eiXluxK812GFJWJbuQj2La8hiMlG23GdE+b1GEUcx2O
      koJzvvx8lIbTAAiBMWhTc5ASxyDFDUf079VldQqCgODfq+We8SMutMfaeG6kcE4caotxVh7A
      cWQ1KPK5G4gIhmAUcy3a/regz3kBQXLt3qduIwD+/j17NYK3YDQafU4Ampub2bVrFwcOHACg
      vLy8w7udq0qPcKrGwdCUSDZs3sG0iSMAmZKT5WRPmcJXny8hOSkBg7Z77ivQDX8Ax4lcLOtf
      Rood6tLe6NWgKDJy5UEcp7bgLN6E8/QuUJxgCELTeyjSNT9EkzimQwHSXIGgD0SKyUKKybrQ
      bocNubYYueYY8tljyPUlaJInuk1svV4AbDYbTqdTdQF5Cb64CignJ4drrrmm7Xj69Okd7v1X
      lZWRMSCLmKgA9uxfe+6syPAxozi0dzuyMRSdRsThcLT4ds/toXDVbmpZli9ZpsjKFbnvpMkv
      Ii++C9OqF9De8Bp4Se4Aub4UpbQATm9DLi1AsdQBAmJEBtLwhyBuNFJkPxAlFMAO4I3uy6DE
      ln9JkxEBGVziZrXZL47j5fUCYLFY2nzPKp7HYDBQX1///Rd2I/z9/a94hKnT67BYrMhOHXbl
      24Zxa+4qTFI4t91wLaIgIJ63h0Kn07lsV/vlhEsQr/B3FJmKOOFJrF//FuHg/9ANvusqLLw6
      ZHMt9n3/w7Hvc+Sa4wAIgdFIKZPQJIxGih/ZpW4dX8IpXLyB0yMCUFNVRm2zg5SkeE6fLiU2
      No7y0pMYQ6IIDriwp68KgHfhqzkBDh48iEajITU1leXLlzN16tQOrQaKT+nH4k8/56BBQ79h
      E9iRv4V+Q4ZQsK2I5L59WblmHVNzstFK3tFrvlK0A2fjOLYB66a/esSV4izbi233Ry0+c6cd
      qfdg9NnPoUkcgxCS2G0nqD2N2wWgofIMmwu2I+NPSlI8+/YXEh7sz9qNBdx51+yLrrdYLG0b
      kFQ8jy+uAjp79izvvPMOoigSEdGSH/e6667r0Gv1/sHcedddOJwyBoMeUuIBeOzJJ11mrycQ
      BBHD1BcxfTAL86rn8ZvzXrtLJLsSxW7GfnAZ9t0fIVcfBq0RbdYctANnIYWnurTunoLbBSAo
      sjfTp01ixeqWtHWmurP8d+EnzLrjHiShxTcqyzKKoiDLMo2NjUiS5HONTndFEAQsFgsmkwmt
      VusTwhweHs78+fORJIno6M5Pcmq0WjTd/zF8L2JAFPrsX2JZ/hS2bf9CP/Jhl9TjrD6KvXAx
      9v1fgq0JMSID/eQX0Pa7oceHpuhqPD4HYAwOY3hsDAeOFDN2aD8kSUKSpDYBkGWZgIAA1QXk
      JQQEBCAIApIkfW/jn79+JTUWgca6WrKvvZavv/qKsIhwrIrEzOuvZVPeejKSYzlW7WT0kH7s
      yM+ld8ZQ9JZK3lm4nJ89Ppczxw6wZ99+6pplMvpnUlNyFNHgjyjpmDBhPPouWl1TV1fHhx9+
      SEhICCEhITz44IM9difw5dCmX4fj6Fps3/wTTdJ4pKjMLrmv4rDiOLYee+EnOEu+AUmHJjUH
      3ZB7EKMHqi4eF+F2Aag8c5JtO3dx5EgpO4tiEQWRwaMns/yzRZTGxRAXeeGOQzUQnHeh1+s7
      nBNAFgQm5kzFUnWcQ0dLCIuM57rrJrF2xeeYHTIWq4VeMYnkbl8NQzI4daaKwaP82fL1YcYM
      y+TYqUr69e1PcLA/h0/bGDmkL6vKypk6bWqXxzF3Op3MnDmT0aNHd/GdfQ9Dzgs0n9mJZdVz
      +N21GEFz5WvV5cYy7EWfYS/8BKW5GiEkAf34J9D0uwnRP7wLrVZpD7cLQGTvRGb0TmRG64kB
      GQDMuO2Odq+32Ww+4WbwFVoFoCMRQe0WCxu+XoOpsYGca6fx5aJt/OffR4hJGoiftqUJFzV6
      gnRQXn4GQ3AUouLkxJlKrhk8gH2Fe+iXfKFLxtRYzcoVK9Dp/Zk0aTwasWt6hkFBQXz55Zds
      2rSJkJAQHnjgAXUEcAkEQzCGqb/F/L9HsG76M/qJP+9UD11RZJwnt2DbuwjniVyQZaSkceim
      3IGUNO6yYRJUuhaPu4C+D7PZTEBAgKfNUDlHq4uuI7mBtQYD2WOn4q8VQbERk5BCZko4BftP
      IsvfbrTqn57M55+v5NqbbqGm/BRBYdFIOj/sTbVYHReua/cLDGfq9dO6fAQQHx/P0KFDCQwM
      xGg0qo3/96BJGot20O3Yd3/UEjDuOztf20M21+HY9z/sRUuQa4sR/HqhG3Y/2oFzEINi3GC1
      ynfxegGwWCyEh6tDQW9Bo9F0WAASklLRtvXQJVJTk0hITUKQdJypqCalT8tKjpikNPr2rSI+
      KpTK0nqysycQ7G8gQK/DZrNj8A8hNqbF5dQ7KoRlS5ci6Yzk5ExGr+mahrq1519SUkJzczNZ
      WVlqCtLvQT9uPo6T+VhWv4D/3Z8g6IPavc5ZXtiyhPPwanDaEGMGYbjuFTRp116V+0jl6vF6
      AbDZbOouYC+iMxFB45NSvj0QWgQAIL5P+rmTLUsuRY2eyZOzAeid8G3cnLjkPuf+0hN3bhA4
      8JoRDPx2026XERcXx9KlSykvLyckJERNP9oBBJ0/xutfxbToXiwb/4Bh6m/bXEGK3YL90DLs
      ez5GrjwAGiPagbehHTgbqVeahy1XacWrv+VqJFDvo1UAfC0cRExMDLfccgsOhwNRFFUXUAeR
      ogeiG34/tm/exJE8EbFXGvbdC7Hv/+LcEs509JN/iTbjBgR9oKfNVfkOqgCodBq9Xu9zaSG3
      bt1KdHQ0mZmZvP3229x7773q0uMOohv5CI7iTVhW/gIc1pYlnCmT0Q29BzE6S13C6cV4tQA4
      HA4cDocqAF6GTqfr0Aig7HQJvaLj0EotDcDRA4X4hcfROzKUo4f2UVZZS3BoLwb0T+f44f2U
      VdYgSDquGZxFTUMDsdFRrn4rbWRlZfH6668THBxMUFCQ6v/vBIKkxXj9H7DmL0CMSEebeZMa
      j6eb4NUC0BoHSF0G6l3odLoOjQCOH9lPYEQsWklAUZzs3rsXfVAlva/P4eixEsZPGk9h/gb2
      +4VQeqyE8ZMmICAgyRYOHz/hVgEwmUzceeedxMfHYpI9VgAAHmNJREFUYzQa1V5rJxFDEzFO
      /4OnzVDpJF7t6LTZbGogOC/EYDB0OjRHbfkpIhIHINgasDpkLE31bNywkaLj5cRFhWBuqiMv
      L4+tBdtxdiwUf5fi7+/PZ599RkVFRafyAaiodGe8fgQgiqI6HPcytFotzc3NnXpN0d5Cyptk
      TLUVHD1ZgTEwlJxpk9m3fTPHisvxCwwjZ+oURMBhcn+4abvdTlJSElu3biUgIIAZM2aoowAV
      n8erBcBqtaLVatUVGV6GXq/v0D4Ah9XCquVfERPbm7MmmHPbzdhNdazasANncw0rVqyksa6W
      MTkDKCk6y/Jly5C0BiaOGsrhoj00na1izMQcwoP8XP6egoKCqK+vJzo6GkmS1MZfpUfg9QKg
      un+8D61W2yEBmHjtTd8eDG/5T+cXwszpFydcT7r9zguOH/6xayJNXopNmzYxZcoUdu7cSXV1
      NTabTf3uqfg8Xt21VpPBeyetcwC+5CcfOnQon3/+OevXr0cQBNXtqNIj8PoRgLoE1PvQarVt
      EUF9Yces0+lk69atpKent+UF6AytQqi6jVS6G149AlCH4d5JZ0JCdwe2bduG3W5HlmUKCgo6
      9Vq7uYkP33+fhR9+wNFT5W3ni3Zu5a+vv4HZ5hvPSMU38erum8ViISQk5PsvVHErWq0WWZZx
      OBw+IdCVlZUYDAYkSWLHjh2EhoaSnp7eoR59ybH9DBo7hcz4IJavySc1oSV8de+kNPqVVbeN
      Ds7PcudK4bysW05p2Vyp0jNp73vn1SMAq9Wq+mK9kNYRgK80JoMHD8Zut2OxWEhISKC0tLTD
      8xtmkxm/AD8krREd3/7AwsLUCLYq3o9XjwBkWVbnALwQSZIQRdFn4gElJCSQkJBwRa8Nj4yk
      6MhxQuVQZEMQ9XV1BAQFIX1n6XLrUmZRFNsC6rmCy45aBHxizkblypDki+e2vHoEAKgjAC+k
      tQHryFLQ7khxcXGHRwDRSRkE0sDW3YeYOG44lWVnsDucbF6/FgcCG9ato9nqG0Kp4nt4fXfA
      F3zMvkZrL9ZXRgDfpaioiISEhA6u6hEYOW5S21Fav5Yk6WOzp7jGOBWVLkQVAJVO05oVrLPx
      gLyZqqoqVq5cCbS4UYqKisjKyvKwVSoqrsXrXUBqJFDvozVCqyzL339xN6G4uJiEhARycnKo
      q6tj/fr1nY53pKLS3fDqEYAaCdR78bW5mV69erFo0SJMJhNOp5Pw8HCfEjiVjrOvbC8HK/e3
      WyYgcOug291skevwegHwtYbGV/C1zyUyMpI5c+ZQV1fHlClTMJvNBAQEeNosFQ+wr7yQzws/
      abdMEiRVANyFJEmqC8hL8TUBaG5uZunSpciyTENDAxMmTFBDO3gRVU2V5B5bd8nyCSnZRAS4
      L4GQr+DVAqDVatUfoZfiawIQERHBzJkzyc3NZePGjYwdO1YNQ+5FVDdXsWTPx5cs7xfVXxWA
      K8CrBUD1/3svviYAxcXFFBQUMH36dCIjIz1tjoqKW1AFQOWK8DUBiI+Pp6amho8//hhRFJk7
      d646AlDxeVQBULkifGluJjc3l7y8PIYPH47FYuGZZ57xtEkqKm7Bq7s4qgB4L7702SQlJRES
      EkJhYSElJSVUV1d72iQVFbfg1SOA0NBQT5ugcgl0Oh0Wi8XTZnQJCQkJzJs3D0VROHToEOvW
      rWPWrFmqC0jF5/FqAYiJifG0CSqXQKvV+owAtCIIAhkZGWRkZHTqdZfKCKbIMoIqIipejNsF
      QFEUdmzdRKNDw8Rxoyk7U0psbBzlpScxhkQRHKCGf+4O+Nok8JViNzex6JPPEEWBEROmtiWE
      yV31FRWNFoxBvZgxbRLqYmYVb8TtAlB8YCdNUijxASa27DyIqeYE4cH+rN1YwJ13zXa3OSpX
      iC9NAl8N7WYEk23UWiRmz5rFimVfYrXLGLTqSEDlYhyygy8KP71k+cCYQfSN7Oey+t0uABXl
      5fQfdS1hOjsn1m7B1HiW/y78hFl33IOkdpO6DRqNRt2kx7mMYBEXZgSTnTZErREAg5/fuZhC
      qgCoXIxTdl52g5teo3epALj9W6nVabFabMg2Mw5BizE4jOH9UzhwpNjdpqhcBZIkIUkXZxjq
      aYRHRnLiyHFqyk+1ZQRTRAPNDRXYHXaqKs+i06rPScU7cbsA9M3M4uuvlrBkyVL6Dx6AKIgM
      Hj2ZuhN7KK2sc7c5KldIa1KYnk67GcGcMHHMMJYtW87Q0RPQiOpIScU7cbsLKDAsmrvuuB0Z
      0Ot0JEy9DoAZt93hblNUroLWvMAq7WcEi0lI4eaEFA/ZpKLSMQSlo8lP3YQsy23L6mRZVhsZ
      L0VRFGpqai6Im+NwOKisrPSgVd6P0+lEFEWXzZ+U1J6k0drYbplBa6BPeGqX1XWqtpgma1O7
      ZUatkeTwrhPAZlszJ2tOXLI8MSwJf13XhO+ubKygurmq3TIB6Bc9oEvqAZAVmYMV7eceAIgK
      jCLcP6JL6nLKTg5VHrjgnFcLQCvfXWf9fcffFY7vO1YU5YIfZGdf35XHnqy7PVsEQbjguZ5/
      LAiCKtCd5LvP0JXY7Xa3Ttbb7Xa3rQ5T67p6HA6H920Ea69Bac3M1FrmdLastmj1QX+3/Pyy
      jhyf3+i1iklruSuOZVm+ZHlnbXflcWtDdb7QiqKoNvoqKj6C140AOsJ3BaA7oSgKDoejW66j
      dzgcqgBcJZfaNewKXO1uaq8+d/0m1bquHlmWu6cAqKioqKhcPWpXTkVFRaWH0u0EQFGUiyaJ
      v1vulSgKiuyltn0H5dyciorrOHpgLytWraXZYndRDQpH9hdS12R10f0vrKtoz3aWL19JVW2D
      S2tyWM1sztvAylVrqG1sdmldrZScOMqpMteHCD96sIi8vDz27j/o8roURWbHN5u9bxL4fBRF
      ZvXyLzE7BBpNTu649Vo+/ugTNFqRa8ZPQ2s7y7Llq5n1w58QFaxj9dLPsSgS8SnpDB3QuYiO
      Xc22/I2UlNfS2NDEjbfeyqZVS7HIEJ2UzjXpCSxb/hWhsRlkjx5E7oaN2GSF48dP8uAjP0br
      xn1DxUf3UbDrIE67haGjJ1N3soiTVfVojIHcdG02X69eTnWzwF1zbmLL+jWU1zVjMlu49bZZ
      +Om9+uvjtZjrK9l1sJRp4wex+uv13DJjWpfXsX/PNvbuLWRwQCwhAa7N3dB0thKnJpic7Ay+
      WL6GObfd4rK6nA4HKRlZBBlgxdr13HbLDS6rC8Bmqic3dwNRaSNIiOnluooUhf2HjpMzJQfR
      DXMAB3bmYzdEePsIQCB72gxumjkDjdPEiSMHyRo3hTm3z+ZA0R6Cw6MZMTgTh1PBVFuGTRfG
      oEGDGdivr6cNZ9A1o7n15puIj/CnuqocXUgcs2fPprrsJIhasqdMRrbZkbR6sqdOY/TQ/sSn
      ZLi18QfonZDGnNm3MTwrjeqzVZTX25gzexbBWjv1FifDx0zAT9fyNamur2fs+AmEGHVYbA73
      GupD1JytpE9qJsG9YtGKrhltZQ4awaB+aS6593cJCI9iYEYyeevXkpDqurg1AHr/QMpPHGTh
      wsVkZg1yaV2KorBm9VqmXjvVpfUAKLITU2MNG9avp7i0wuX1nThZSvnJw94tAIIgYG2u58P3
      P2LkhCnYbVb8DX6IkhatViIsLLwtzK7d3ExFVSX1tdUs/t+XHrUbQBRkPv90MX7RfYkJ1qHV
      +4Mgotcb8AsMxE9//ioghc1bvmHMmBFut1Or1ZC3diWHzpgZOagvgtTSW/QP8EdBIjQk8Nwz
      VggNMLK9oIA6kxWtRg1vcKVotXpsdgsoMk67q1xA7kORHSxe9CHJA0YyapDrR96Dho3ihhnX
      U7h3D650qjZWlVJaVc+eXbs5vH8vJrvrXKOCpOGOu+9j+vTr2bNjq8vqaUWnNTLluune7wJa
      uWwVN825g0CjjiqhgZ0njhGuiwLhwnj0xpBeBAYEkDVoEMdOFHvG4PPYuHolQ8ZNITEmHLul
      ierKHdgtaTQ1mc9dIdCqXk21FVh1IYR5IBfC4b0FiMHxzBjeHxQZq+ksVrud06crGDJSAzhR
      zhlaWdPITbfNYceG1VTUNBIY6ztpId1Jr5h4Vq1fTNWpIiIT+7ukjn27t7FjVxFKYBWBumxi
      o8NcUg9A1amjVNRa2L9nO9XVSYwcOtBldVWePs6WnQfw04J/sGszBgZFxvPwQ/djb6pAKKzA
      z4UhvZ12E5//bxmBwQFojUEuq6eVgVn9+PzTT717GagiO9m4bhWNZieiZGDadVPYmZ9LVYOV
      yZOzObS7gDPVdQiiyPBR46k5fYTDJ87Qf/BQ+sR7NpvY7oJNlFTUAgJjJmRTc/oo+4+eYsTY
      CSjNZ9lddBBFUYjvk064n4AxLIawQD+321l8eB+Fh4+DAplZ1xCkc7ClYBdp/YeQFBXAxryt
      yIpCUHgUqb1D2Vl4kKDQCMaOHo6ohoO+YmSnA4vNgZ9RTYDUWRwOO7LcElnYl76Biixjtdsx
      uCnftt1m824BUFFRUVFxHV49B6CioqKi4jpUAVBRUVHpoagCoKKiotJDUQVARUVFpYeiCoCK
      iopKD0UVgC7CajFhsdoue43NYqK8wvUxRVRUVHouNlM9X321nGabE8XpYN3q5ZSfrW/3WlUA
      zmPLui/5wQOP41Dg6O7N3Dr7Dmotzku/QHHy339/iAzkrf2clflFl75UdvDs08+weftOAD55
      /01+8tB9PDb/CZav39xhGy2NZ3nkR/fw9FNPsODthciKg/++9xFq+DYVFRUAS1MVr/3tL2zd
      fZizpYf5w5/+xv4TJTScrWTVqpWcKquiua6G/UV7vXsnsLuxWM0EG6zsO17O3vwCYqJDsNtt
      /PmPf6CstpFJM2ajrzvK+p0HaKhv5pZbb2DRooVU1tWSmRrG0sX/ZcNn/+bhJ56jX1IMB3Zs
      5u0P/ofeP4Qbpg7n6Jky+te3REucfc/D6AWZkAGTGZUWzZ9feYWqmrPMvPkWVq5Zi83m4Mn5
      j/GXV3+LoDOS1H8MD919E4rsJDK2Ly/95jn+369+zqIlGhYtWsjZhnoe/elP3B5LSEVFxfsY
      PWk827dsxhwtMGniWFCcvPy73zF5+k288uJLzL3vZhZ8vFYdAXyXMWPHsjk3j5JaG/Gh/tSU
      HqLJL5pXfv8i61Z/ydmKMm6+80HGZsYSHJVMRtpA5s9/FJ0AM2ffw4ypozhyshyAL5d+wZO/
      +i0jM3phNUaR1DeT+++a9Z0aFWTZzo5du/nJU8+RkZpEUmw09WeKOX7qDKI+nOeffYqSg3sv
      eJUgSqQmRxOX2p/01IE8/pja+KuoqLTgHx6Hra6EwmMVZCbHIDtsKEY/rp2aQ2piMPUmO0OH
      jVYF4LtE98nkyDfLiYjPQAC0Rn9qKs5QXnYG5VygtG9DIAjgMFFWcRal9fx54RGMBh2lJacp
      PVOOn9EIl9l0nZKWSUJUGCs+/YikgaNJjotGQEEUhYu2uzc317Fz21ZWbtlHWmIcir2Z8qoa
      lwbGUlFR6T6IgobM5Agcxmi0koCoNZAUpOfF3/yWU3V6IoMNgKiGgjifE0f2IfhHcvrQThIy
      h3PqwHaGjM1h+7rl7Nh/gpm33o71bDFh8f04e3If4Yn9OXNsF9uLipk8fhiKIRyNtQq7rhfp
      STHUV53hg4WLCY/ty+xbprF6XS7XT5ncVt+hwu0YI5PoHerPps07mJQ9jtLjB/h06RpioqMZ
      PzGbwwcPMW70EPK27CQ7ezx2azMff/ABdo2RSdlT6JPQm4LN69hz+Aw/uu9u1CCdKioq7aEo
      Cs3Nzfj5+7d1YlUBUFFRUemhqC4gFRUVlR6KKgAqKioqPRRVAFRUVFR6KKoAqKioqPRQVAFQ
      UVFR6aGoAqCioqLSQ1EFQEVFRaWHogqAioqKSg9FFQAVFRWVHkq3iga6+2g5B062H09/cGoU
      /RIj3GyRa3GcyMVZ3n6IaU3yBKToAW62yLWYCrZhP3Wq3TLj8GHoEhPdbJFr2VN2msrmpnbL
      BkX3JjIg0M0WuZa8Y+upbKpot2x8n0lEBka71yAXY6lciWJvv73SR1yHqOvlZosuxiUC4LDb
      sNicBPgbu/S+e46W81nuwXbL9FrJJwXAvufjdssEv3CfEwDztm00521qt0wTFemDAnCGfZXl
      7Zb1DgzyPQE4voGisj3tlqVH9vM5AbBWrcLZ3H57pQ0e5t0CsHbJf1mWvx/RaeHa237ItHFD
      OnzT8oPbWZJ/ksd/fCdlB7bz3J/eIjjAwKRrZ3Hz9RO6xPDLcfrUMf7y2j8IDwvn5jm3s/KL
      T3Cipay8nBde+DUfvPcPGk0ydbV1PP7Ek+StXca4aTfyl989z4w59zJ6aBZvv/cfskcN5c3/
      LiI+JpqRYycwcewo1q/9itXr8wkNCeH+Bx7CbqrhvofmsfiTT3Faann2+d8RGxNDYmpfZk4b
      x70PPsbixYvQS3D/fffws2dfInf1/7DYRARR4oEHHyI8NPiq3u+7by2g+Ew1dpuVhx5+BL3o
      4C+vLSA8NJSYhD7cNvN6nnzqaWLj4uidkMSD9/2Qd978OzWNVirKy/jZ/CdYsmghu/fuISOj
      P7Pu+AFpyQld9Gl0Pf947c9U1TZhtVmZO+9R7OZ6/vHmvwgODCCl30BC9DIhvVMZfc1gFrz+
      F8aMHc27/15IfFwsQ4eNZMrkiZ5+C53i9QV/54EHH0Yr2vnXfxYSEezPyOxrie0Vxt9f+xMP
      Pvgwr7z6CkFBoTgFgafmz+edN1+nuq4Zc3MT85/5BR+//x4P/vgRnnxsLgnJaQSHR3Dd5LH8
      4613CQoIYFz2VCaOGenpt9rGF59+xIBRk/n3G/9HYFAENbV1PPvLF5BkEzfePJtFn31BZGgw
      Dz/4I5JS+9LUbOaeO28mt2AfD/3wbl568Xl++evfohW938v9xz//iaeeeBKAt996nR89OJdF
      77/DqfJaqirKmP/0L8hbtZSyJjtPPjqXP/75T/z4/h/w5DO/Ji01hZxp1/H54g/xDwqlyWTi
      mWd+wf+98hKBweFotDpuvHEGb735NsHBgYybOJmDRTt44MeP4rCYLy0AFlMTc+6dh1i1k80H
      DlC6fT3NTgvpI3PIX7kUs9XMrffOpXDtIkob7dQ2yLz6myd45bcvYzGb6J05DgCnw8rgEZN5
      9Ec38dNHHmXihKH84w+/p9Hs4O4f/5R1/3uPBgtMuH4WSkUhKzbtYWz29cycNu6KH+gnnyzi
      medeIDIshOrykwiGYJ6a9xN2b8tjzboNIIo8/cxT7MjfwI69RdisNmRZJiQymrUrvmBYVn/s
      Nhuy08m1M27khimT2u7tlJ3cfe8P6Z/eF4CPV/yPO26/lS3fbGNEVh/GTZzE3XfM4Ve/eQll
      2hhio0L4ZvsOYsOMGIPDsdntSBotTz7+BJou+nIqCMz96eMYRTuvv/UuEUFGfjr/aRJiovj9
      yy/RZM5m4DXD+Okjj/DOP19j++5d1Jgc/PzppzlycC9rN+Qx/8mn+fvf/8jcR59EErw8pKgo
      8fgTT+Iw1fHuR4swCHae/PlzRIWF8Jvf/poHH3iAhZ9+ybCB6VTVNBDob2Ta9dOZef21nrb8
      irDbWlONKtjtdux2Gw5nS6Y6q8XC+rUrmXz9zUwaPRyA06eOYhUM/PLZx9ruYbFYQIHeiX14
      5plnAMhdu4zUvv25/94fIEne1VA67HYcTicRUdE8Om8+f/nD76muqeXQ7i3cd/8PWb9+A7ff
      ehOJqX15Yv7PeOmlXxGXMoAziz5h5fIvSB80ols0/gA2m/W8vy3YbGaOllTy6+efp+z0CT75
      /EvCjAJlpcWcPFOOzWZFUWTGjB/Pj+65G4BVK7/iF7/4BV8s+YjiU6cwBoa0fc5bN31Nn379
      efCeu9FoJAp35wOgoFxuElhhycJ3+WDxV6T37UtJ8UGSR0xj6pihZA3MJMRPy5YtBZw+VcYT
      z/6KUGctmzatJ2XkVB574K6L7iZpDSRGG9i7dQvVVi2DM5JYtnIlR44cJSElncw+MXy2dhO/
      e/l33DB17FU9UJPJSsS5XrW5uZGIXpEAREdH0tTUgN1m5dcvPM+Sr9YyfuSwtteJkobpU7P5
      YvnKtnNfr1rBggUL2F14zhevKHz26ae8/c6/qG9qYvuuPaSl9iUvdwMAG9d9zdx58xg9ejwA
      w0aNY9s3+eTm5ZE9qeWcxWLmjX/8g3+++RbNlm8//KslKCQMBQWbUyY0JARBEAgKCsF0Xh0J
      iYlUnq0mNKzFXRYWHkljQ0OX2eBOwiOisNmtOAWRoIAABEHA3z+QgJAImuuq2LVzG5lZQwH4
      es1qFixYwLZd7bsgvBmrqYk333iDBQvexGa3X1ReV19PfEI8X335GT99Yj619Q3ExMaxc8dW
      5s19mJKqs23Xlhw/yoIFC/hkyWeMz7mOuIhgfv7Mk2w9l6rU2ygvO8Prf/87J85UERoUSN6W
      rfTLyCR/cy6KonD88AFef/11TFYZjSDy0AMP8O77i5l980xPm37FOJ0OgkLCAAgNi6CpqREU
      hR/84B7e/+9/2q4ryM/nzTff5NCxEzTUnOXZXzzD7gMn6JuaQkNNNQsWLOCdf/2b4aMn0Sc6
      nGef/Tl5+d9gs1pYsGABb7751uUEQGDSlOncOesG8jZvRhAMTBozjPKDO9lT0sTE0cMABRAQ
      RBAAnU5HZXk5p8su9GvW1FSyef1qDlYLJMaEYrI6yLxmNNmjR/DIo08SITbw38VfoVUcnCwp
      pbyi/YmijpKUGMfXeVuwmE1o/UPYu2cHdoeDtetySUlNQ6vTM/+J+TjtVpqaTRe8dvS4HPbv
      3opDbomSPXnadcybN4/BA8/52wWBW2fN4qEHH6C5toLgsGh0OiOCw0J9k4mJk3PImTi27RkY
      jQFoZDOlVY3EhLd8qAaDkZ/MncsjD/8Yf4P+qt5rK4qisGHdaiIioukdGc7Wrd9gam7gdNkZ
      woICAKirPcv63M0MHTiQYwf2YrHayN+0nrS+fbvEBnciKzIrly8lIT6JiOBAduzaRWN9DTU1
      NQQYDQzK7Mu77y9kwrixCEDO1GnMmzeP4UMGedr0TqP38+fhn/yEefMeRqfVEhIUyL6ifTQ2
      1NBodtAvI51lX37J9Jm3kBAbQ1xcAgWbNtCv/xBGjxjG+ZmC4pJTmDdvHrNvu5WSUyWMGDuB
      p+Y/yraCAs+9wfOQZScOp5OS06cJ8DMSHdObxx7/GRNGDmLXrgIkXQAoAkFGHVW19fTpm8ET
      858kLiKEipo6esenMGTwwC4bXXsCnc7ImZNHaTab+WbzBlLT0gAIi4gmtlcAR0+dBmDE6NE8
      /PDDpKckExTWi0fnPoypqR6r1UpgaDjz5s3jwQd+RHnZaYaOHMtTTzxO/jffoNMbmDdvHg8/
      /GOkF1988cV2rRAUCgt3U2dRuOfOOQQGBJCYkkJAcChH9+3AjIGBWVnEx/UmMaUPkiAxauJk
      iou2U22RGTx4CHExESDAqZPFNNth7iOPEBOfhN5ez67Cg6T368+h3QUUVzVz0603M354FsuW
      rcAYEkF8TNRFJu257Cqg6LZJ4Mz+A9m6KZdNm/PJGDCIPvHRvPfef4jsncT0aTmgQEpqOiOH
      X8P2nbtJS00hKro3fgY9iYmJJCUmEBTSi6SEeLZ9s5WdO3ciCyKxMTEoCoSG9cLfz4/Kqkqu
      GT6KzIx04mOjETQ6QkPCyM7OobaqHL/AUEJDw8ga0J/klDSioyIJDg1Dr5FYs+ZrduzcRUpa
      GgZ9+yLgOJGLXHGpVUAT2yaBZYedjRs2oDEEcPus20jPyCQ/bz1rv97ID+79ERFhoRzaV8S+
      /QeZNedOEuLiiI2J4t/v/Qd9YDg3zZyOKAgIAsTGxiN4yAVk3nbpVUB+I4a3TQI7bFY2rN9A
      QEgvbr3xRvr1H8D6NSvZkJfPvT96gLCQYKJiojFZHIwdOQIEgYL8rezYuROr3Ul8XKw739Yl
      2VN2hqpLrQKK+XYVkCgKxMbGI4kigiAxesxYNq3/mrxNW7nz7nvIzBxIY00FXyxdRlrfTLKy
      soiLjuSTTz9F0vkxcvgwNJJEfHw8ZaeKyd9awJHjJ0hOiOXTTz5l/6Hj3HnnHS1Z61xI3vEN
      l14FlJJNZGA0luYG/vKXv5KcPpARQwdRWV7GxtxN+IdEMGhAPwYOHsrAAf3pk5yIzSFTX1XB
      1oLtpGVmcU1Wf6AlKV9igucXDFirVnVoFVBzfS3rNmyk0WwlKSGe+PhEUpMS+fe/38OGlttn
      34ZGkoiOiSVr4AAcDpkBmZloNHpiolvaSVEU6T9gEJl9Uzhw5Bi9gvxZvyGX3Xv2kpKWwpLF
      n7Dv4GHuvONOAvz8iI1r+Z13q4Qw6jLQb1GXgXZ/1GWg36IuA/UM/x+2VURZT9yqJQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Diaper Trends By Brand' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Effect on Percent dicount to Sales' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Seasonality in Diaper Sales' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
